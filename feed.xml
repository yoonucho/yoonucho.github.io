<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>윤우블로그</title>
    <description>One sentence introducing yourself or what you do</description>
    <link>https://yoonucho.github.io/</link>
    <atom:link href="https://yoonucho.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Oct 2023 16:52:29 +0000</pubDate>
    <lastBuildDate>Fri, 13 Oct 2023 16:52:29 +0000</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;개발자 오디세이아  저: 이경종 / 로드북 (e-book)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2020년&quot;&gt;2020년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	700페이지가 넘는 책을 드디어 완독하였다! 작은 성취감을 이루었다. 나중에 여러줄 리뷰도 써보고 싶다. 😹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자바스크립트 코딩의 기술 저: 조 모건 / 역: 곽현철 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
 코딩의 기술이라는 제목의 책은 다른 언어로는 많이 있는거 같은데 자바스크립트로는 없는게 아쉬울 때 나의 니즈를 충족해준 고마운 책, 실무에서 유용하게 쓸 수 있을거 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	매일매일 3분씩 봐서 드디어 다봤다. 그런데 익숙하지 않은 용어가 꽤 되어서 술술 읽히지는 않더라. 다른 네트워크책도 읽어봐야 겠다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;심플 소프트웨어 저: 맥스 카넷-알렉산더 / 역: 이미령 / 길벗 (e-book)
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	좋은 코드에 대한 생각을 업데이트하게 된 책, 단순한 코드를 만드는게 쉬운 일이 아니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;개발자의 글쓰기 저: 김철수 / 위키북스
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰:
 가장 인상깊던 문구는 이름짓기는 창조가 아니라 조합이다라는 내용이었다. 자바스크립트 코딩의 기술와 더불어 실무시 항시 옆에 두어야 할 책이라 생각한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;GROWTH DEVELOPER(그로스 디벨로퍼): 주니어 개발자를 위한 성장 지침서  저: 서일환 / 헥사곤 (e-book)
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰:
 무작정 트랜드나 최신기술에 현혹되기보다는  현재 문제를 풀기 위해 필요한 기술이 무엇인지 아는게 중요하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;클린 소프트웨어 저: 로버트 C. 마틴 / 역: 이용원, 김정민, 정지호 / 제이펍 (e-book)
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰:
 이책도 커리어스킬에 이어 무려 727페이지나 되어서 보는 기간만 2달정도 걸렸다.
 처음으로 접하는 밥아저씨 책이라 기대도 했었지만 주로 책에서 나오는 언어가 자바라 무슨 얘기인지 몰라서 솔직히 읽다가 포기하고 싶을때도 있었지만  그래도 완독하게 되어서 뿌듯하다. 조금 더 개발자로 성장하면 다시 봐야 할 책이라는 생각이 든다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;앞으로-읽어야-할-책-목록-현재-가지고-있는-책-목록&quot;&gt;앞으로 읽어야 할 책 목록 (현재 가지고 있는 책 목록)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2020/06/17/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2020/06/17/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;GROWTH DEVELOPER(그로스 디벨로퍼): 주니어 개발자를 위한 성장 지침서  저: 서일환 / 헥사곤 (e-book)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2020년&quot;&gt;2020년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	700페이지가 넘는 책을 드디어 완독하였다! 작은 성취감을 이루었다. 나중에 여러줄 리뷰도 써보고 싶다. 😹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자바스크립트 코딩의 기술 저: 조 모건 / 역: 곽현철 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
 코딩의 기술이라는 제목의 책은 다른 언어로는 많이 있는거 같은데 자바스크립트로는 없는게 아쉬울 때 나의 니즈를 충족해준 고마운 책, 실무에서 유용하게 쓸 수 있을거 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	매일매일 3분씩 봐서 드디어 다봤다. 그런데 익숙하지 않은 용어가 꽤 되어서 술술 읽히지는 않더라. 다른 네트워크책도 읽어봐야 겠다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;심플 소프트웨어 저: 맥스 카넷-알렉산더 / 역: 이미령 / 길벗 (e-book)
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	좋은 코드에 대한 생각을 업데이트하게 된 책, 단순한 코드를 만드는게 쉬운 일이 아니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;개발자의 글쓰기 저: 김철수 / 위키북스
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰:
 가장 인상깊던 문구는 이름짓기는 창조가 아니라 조합이다라는 내용이었다. 자바스크립트 코딩의 기술와 더불어 실무시 항시 옆에 두어야 할 책이라 생각한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;앞으로-읽어야-할-책-목록-현재-가지고-있는-책-목록&quot;&gt;앞으로 읽어야 할 책 목록 (현재 가지고 있는 책 목록)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
  &lt;li&gt;클린 소프트웨어 저: 로버트 C. 마틴(드디어 밥삼촌 책을!) / 역: 이용원 , 김정민 , 정지호 / 제이펍  (e-book)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2020/04/16/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2020/04/16/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;개발자의 글쓰기 저: 김철수 / 위키북스&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/200330_book.jpg&quot; alt=&quot;개발자의 글쓰기&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2020년&quot;&gt;2020년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	700페이지가 넘는 책을 드디어 완독하였다! 작은 성취감을 이루었다. 나중에 여러줄 리뷰도 써보고 싶다. 😹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자바스크립트 코딩의 기술 저: 조 모건 / 역: 곽현철 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
 코딩의 기술이라는 제목의 책은 다른 언어로는 많이 있는거 같은데 자바스크립트로는 없는게 아쉬울 때 나의 니즈를 충족해준 고마운 책, 실무에서 유용하게 쓸 수 있을거 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	매일매일 3분씩 봐서 드디어 다봤다. 그런데 익숙하지 않은 용어가 꽤 되어서 술술 읽히지는 않더라. 다른 네트워크책도 읽어봐야 겠다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;심플 소프트웨어 저: 맥스 카넷-알렉산더 / 역: 이미령 / 길벗 (e-book)
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	좋은 코드에 대한 생각을 업데이트하게 된 책, 단순한 코드를 만드는게 쉬운 일이 아니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;앞으로-읽어야-할-책-목록-현재-가지고-있는-책-목록&quot;&gt;앞으로 읽어야 할 책 목록 (현재 가지고 있는 책 목록)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2020/03/30/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2020/03/30/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴 (정말 3분만 보고 있음.)&lt;/li&gt;
  &lt;li&gt;심플 소프트웨어 저: 맥스 카넷-알렉산더 / 역: 이미령 / 길벗 (e-book이라 사진x)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2020년&quot;&gt;2020년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	700페이지가 넘는 책을 드디어 완독하였다! 작은 성취감을 이루었다. 나중에 여러줄 리뷰도 써보고 싶다. 😹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자바스크립트 코딩의 기술 저: 조 모건 / 역: 곽현철 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	코딩의 기술이라는 제목의 책은 다른 언어로는 많이 있는거 같은데 자바스크립트로는 없는게 아쉬울 때 나의 니즈를 충족해준 고마운 책, 실무에서 유용하게 쓸 수 있을거 같다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;앞으로-읽어야-할-책-목록-현재-가지고-있는-책-목록&quot;&gt;앞으로 읽어야 할 책 목록 (현재 가지고 있는 책 목록)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
  &lt;li&gt;개발자의 글쓰기 저: 김철수 / 위키북스&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 12 Mar 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2020/03/12/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2020/03/12/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;자바스크립트 코딩의 기술 저: 조 모건 / 역: 곽현철 / 길벗&lt;/li&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴 (정말 3분만 보고 있음.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/200216_book.jpg&quot; alt=&quot;자바스크립트 코딩의 기술 &amp;amp; 하루3분 네트워크 교실 &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2020년&quot;&gt;2020년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 
  	700페이지가 넘는 책을 드디어 완독하였다! 작은 성취감을 이루었다. 나중에 여러줄 리뷰도 써보고 싶다. 😹&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;앞으로-읽어야-할-책-목록-현재-가지고-있는-책-목록&quot;&gt;앞으로 읽어야 할 책 목록 (현재 가지고 있는 책 목록)&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
  &lt;li&gt;개발자의 글쓰기 저: 김철수 / 위키북스&lt;/li&gt;
  &lt;li&gt;심플 소프트웨어 저: 맥스 카넷-알렉산더 / 역: 이미령 / 길벗 (e-book)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 16 Feb 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2020/02/16/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2020/02/16/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>사이드프로젝트 냥터레스트3</title>
        <description>&lt;h2 id=&quot;냥터레스트를-진행중에-리팩토링한-코드가-있나요&quot;&gt;냥터레스트를 진행중에 리팩토링한 코드가 있나요?&lt;/h2&gt;

&lt;h3 id=&quot;getter&quot;&gt;Getter&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;get을 이용하면 호출시 ()없이 변수처럼 사용할 수 있다는 멘토님의 말씀을 듣고 코드를 정리해 보았습니다.
https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Functions/get&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그런데 수정해야 할 코드가 listStore파일(store)에 있고 Mobx에서는 javascript의 getter에만 사용할 수 있는
@computed라는 데코레이터를 지원한다고 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;@computed를 사용하면 동작에는 큰차이가 없지만 성능적으로는 최적화를 할 수 있다고 합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;함수로-만들-코드를-찾아보자&quot;&gt;함수로 만들 코드를 찾아보자.&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;happenFrom과 happenTo&lt;/li&gt;
  &lt;li&gt;totalPage&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;happenfrom과-happento&quot;&gt;happenFrom과 happenTo&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;수정 전&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
		&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;loadList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/page/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;수정 후&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
		&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;loadList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/page/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

			&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;computed&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;computed&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;searchStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;코드 부연 설명: happenFrom()과 happenTo()는 시작일의 변수인 from과 종료일의 변수인 to의 데이타타입을 맞추기 위해서 Date타입에서 YYYYMMDD형식의 스트링으로 변환한 함수입니다. moment 라이브러리를 이용하였습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;totalpage&quot;&gt;totalPage&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기존에는 totalPage코드가 listStore.js(store)의 loadMore()와 Home.js에 중복되어서 들어가 있었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;// listStore.js&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;loadMore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 중략 &lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;totalPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;// Home.js&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
	&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalPage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;loadMore()안의 totalPage를 함수로 만들고 Home.js에는 props로 넘기면  중복없이 사용할 수 있을거 같았습니다. 마찬가지로 computed를 사용하여 코드를 정리를 해보았습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;// listStore.js&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;computed&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paging&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paging&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;// Home.js&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isLoading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hasMore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalPage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;코드 부연 설명: totalPage()는 불리언타입으로 한 페이지에 나타낼 수 있는 아이템 갯수를 나타내는 변수 numOfRows와 페이지수를 나타내는 pageNo를 곱한 값이  총갯수인 totalCount의 값보다 크거나 같으면 리턴을 하는 함수입니다.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Tue, 14 Jan 2020 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/side_project/2020/01/14/nyangterest_code.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/side_project/2020/01/14/nyangterest_code.html</guid>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄 리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;커리어스킬 저: 존 손메즈 / 역: 이미령 / 길벗&lt;/li&gt;
  &lt;li&gt;하루3분 네트워크 교실 저: 아미노 에이지 / 역: 김현주 / 영진닷컴 (정말 3분만 보고 있음.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/191230_book.jpg&quot; alt=&quot;커리어 스킬 &amp;amp; 하루3분 네트워크 교실 &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰 (부끄럽게도 얼마전까지 철의 왕인 카네기가 이 책의 저자인줄 알았었다…하핫..😁)
  	역시 구관이 명관! 20세기 책인데도 전혀 괴리감이 없다. 인간의 심리를 파악하는데는 트랜드란 중요하지 않은가 보다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;읽고-싶은-책-목록&quot;&gt;읽고 싶은 책 목록&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
  &lt;li&gt;GoF의 디자인 패턴 저: 에릭 감마 / 역: 김정아 / 프로텍미디어&lt;/li&gt;
  &lt;li&gt;군주론 저: 마키아벨리 / 역: 강정인, 김경희 / 까치&lt;/li&gt;
  &lt;li&gt;시작하기엔 너무 늦지 않았을까?(원제 Jog On: How Running Saved My Life)  저: 벨라 마키 / 역: 김고명 / 비잉(Being)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 30 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2019/12/30/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2019/12/30/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>냥터레스트, CORS를 모르는 프론트엔드 아깽이</title>
        <description>&lt;h2 id=&quot;시연-영상-추가&quot;&gt;시연 영상 추가&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프론트엔드(localhost:3000)에서 백엔드(localhost:8080)에 자원을 요청한 상태일때 시연 영상을 찍어 보았습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;영상의 상단은 CORS이슈 발생 상황이고, 하단은 Express 미들웨어 CORS모듈을 설치 후 실행했을때 화면입니다.&lt;/p&gt;

    &lt;ul class=&quot;youtube-list&quot;&gt;
 &lt;li&gt;
     &lt;div class=&quot;youtube-wrap&quot;&gt;
         &lt;iframe width=&quot;1024&quot; height=&quot;600&quot; src=&quot;https://www.youtube.com/embed/TIE8-qyvkRQ?showsearch=0&amp;amp;rel=0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
     &lt;/div&gt;
 &lt;/li&gt;
 &lt;li&gt;
     &lt;div class=&quot;youtube-wrap&quot;&gt;
         &lt;iframe width=&quot;1024&quot; height=&quot;600&quot; src=&quot;https://www.youtube.com/embed/ptFp-RoqDd0?showsearch=0&amp;amp;rel=0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
     &lt;/div&gt;
 &lt;/li&gt;


&lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;간단-소개&quot;&gt;간단 소개&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;안녕하세요. 정혜인님과 사이드 프로젝트 냥터레스트를 진행중인 조윤우라고 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트는 유기묘 정보를 제공해주는 웹서비스이며 프론트엔드는 React, 백엔드는 node.js로 구성되어 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트에 대한 좀 더 자세한 내용은 &lt;a href=&quot;https://yoonucho.github.io/side_project/2019/10/14/nyangterest_view.html&quot; target=&quot;_blank&quot;&gt;사이드 프로젝트 냥터레스트&lt;/a&gt;에 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트를 진행하면서 겪은 문제점이 많은데 그중 CORS 이슈에 대해서 여러분들과 공유해보려고 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;내용은 당시 겪었던 내용에 발표자료를 준비하면서 테스트한 내용을 추가하였습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;문제발생&quot;&gt;문제발생!&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;유기묘들의 정보를 &lt;a href=&quot;https://www.data.go.kr/&quot; target=&quot;_blank&quot;&gt;공공데이터포털&lt;/a&gt;에서 제공받았는데 API주소를 프론트쪽에 직접적으로 넣으면 이슈를 뿜는걸 처음으로 알게 되었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/cors1.jpg&quot; alt=&quot;error_msg&quot; title=&quot;안녕 CORS 이슈 월드에 온 것을 환영해&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;말로만 듣던 CORS 이슈를 정면으로 마주하게 되었습니다. 😢&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3가지-키워드&quot;&gt;3가지 키워드&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;우선 내용을 좀 더 쉽게 이해하실 수 있도록 3가지 키워드에 대해서 설명을 해보려고 합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cors&quot;&gt;CORS&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;CORS? Cross-Origin Resource Sharing의 약자로 교차 출처 자원 공유를 말합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서버와 클라이언트가 정해진 헤더를 통해 서로 요청이나 응답에 반응할지 결정하는 방식입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;원래 도메인과 다른 도메인에서 요청한 웹페이지 자원에 대해 허가하는 메커니즘을 말합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SOP를 우회하는 방법중 하나입니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sop&quot;&gt;SOP&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Same-origin policy의 약자로 동일출처정책을 말합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어떤 출처에서 불러온 문서나 스크립트가 다른 출처에서 가져온 리소스와 상호작용을 하는것을 제한하는 중요한 보안방식입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cross Domain Issue에 대한 근본적인 원인이기도 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;두 페이지의 프로토콜, 호스트, 포트가 같아야 합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cross-domain-issue&quot;&gt;Cross Domain Issue&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데이터를 호출하는 도메인과 데이터를 반환하는 도메인이 다른것을 말합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;방법모색-1-테스트&quot;&gt;방법모색 1 (테스트)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;CORS 이슈를 해결하기 위해서 프론트에서만 해결할 수 있는 방법들을 모색하였습니다.  당시에는 백엔드 세팅을 안하고 간단하게 테스트만 해보고 싶었습니다.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;크롬확장 프로그램 설치 - &lt;a href=&quot;https://chrome.google.com/webstore/detail/allow-cors-access-control/lhobafahddgcelffkeicbaginigeejlf&quot; target=&quot;_blank&quot;&gt;Allow CORS: Access-Control-Allow-Origin&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;크롬에서 –disable-web-security 옵션을 추가하고 실행&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;JSONP방식으로 요청&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;API 요청서버에서 CORS 설정을 지원하는지 확인&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;3번은  여러 보안상 이슈로 인하여 W3C에서는 2009년 채택된 CORS 방식의 HTTP 통신을 권장하고 있다고 해서 패스하였고&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4번은 공공데이터포털에서 CORS 이슈에 대한 문서를 제공하는 걸 보니 CORS설정을 지원하지는 않는거 같아 1번과 2번을 시도하게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;시도결과&quot;&gt;시도결과&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Allow CORS: Access-Control-Allow-Origin 설치&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트에 적용할 당시에 있던 크롬확장프로그램은 없어졌습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;같은 기능을 하는 다른 확장프로그램을 설치하였고 화면이 제대로 나오는걸 확인할 수 있었습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Before		
&lt;img src=&quot;https://yoonucho.github.io/post_img/cors2.jpg&quot; alt=&quot;sop우회전&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;After
&lt;img src=&quot;https://yoonucho.github.io/post_img/cors3.jpg&quot; alt=&quot;sop우회1&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;–disable-web-security 옵션추가&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;크롬 바로가기에 오른쪽마우스를 클릭하고 속성을 열어서 –disable-web-security을 추가해보았습니다. 하지만 달라지는게 없었습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다시 검색해보니 –disable-web-security에 –user-data-dir=”C:\chrome”를 추가하고 아이콘을 실행하면  C드라이브에 chrome이라는 폴더와 데이터가 생성이 되며 도메인 이슈를 무시하는 브라우저가 새로 열립니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/cors4.jpg&quot; alt=&quot;sop우회2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;방법-모색2&quot;&gt;방법 모색2&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1번과 2번은 개발자가 테스트하기에는 편리한거 같습니다. 하지만 사용자에게 크롬에 확장프로그램을 추가하게 하거나 옵션추가를 요구할 수는 없지요&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어짜피 백엔드에서 설정을 해주어야 한다는 사실을 깨닫게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;해결과정&quot;&gt;해결과정&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;서버 응답헤더에 직접 추가 코드를 설정&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;         &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/*&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
             &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Access-Control-Allow-Methods&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;GET, POST, OPTIONS&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Access-Control-Max-Age&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;3600&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
             &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                 &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Access-Control-Allow-Headers&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Origin, Accept, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Express 미들웨어 CORS모듈을 설치&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;npm install cors –save&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;// server.js (서버 localhost:8080)&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
     &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cors&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node-fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

     &lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

     &lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
             &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;openapi.animal.go.kr/openapi/service/rest/abandonmentPublicSrvc/abandonmentPublic?serviceKey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;발급받은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;서비스키&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
         )
             .then(response =&amp;gt; response.json())
             .then(json =&amp;gt; {
                 res.send(json);
             })
             .catch(() =&amp;gt; {
                 res.send(JSON.stringify({ message: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; }));
             });
     });

     // 중략
     app.use(cors());

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;// App.js (프론트 localhost:3000)&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 &lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

     &lt;span class=&quot;nx&quot;&gt;callApi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;localhost:8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

 &lt;span class=&quot;c1&quot;&gt;// 중략	&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;삽질-이유를-정리해보자면&quot;&gt;삽질 이유를 정리해보자면&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트를 진행하기 전에 비슷한 튜토리얼을 보면서 따라 만들어봤었는데  당시 이용했던 API는 CORS설정을 지원해주는 API여서 별도의 백엔드설정은 없었던 것을 이제야 알게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어짜피 있어야 할 서버인데 서버를 만들고 싶지 않은 이상한 고집때문에 며칠을 몸고생 맘고생을 하였습니다. 😔&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전체적인 흐름을 이해하지 못한게 가장 큰 원인이라 생각하였습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;고집을 부리면 몸과 마음이 고생한다는걸 몸소 느꼈습니다. 아니다 싶으면 빨리 포기할 줄도 알아야 한다고 생각했습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사실 몇 달전에 혼자 진행하다 보류한 사이드 프로젝트가 있었는데 그 때는 CORS모듈이 왜 필요한지도 모르고 설치를 했어서 이런 문제는 겪어본적이 없이&lt;/p&gt;

    &lt;p&gt;무난히 지나갔었습니다. 그당시 그냥 지나간 댓가를 톡톡히 치뤘다고 생각합니다. 작은 모듈 설치도 가볍게 여기지 말자는 생각을 했습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;참고-사이트&quot;&gt;참고 사이트&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://guswnsxodlf.github.io/enable-CORS-on-express&quot; target=&quot;_blank&quot;&gt;node.js express에서 CORS 허용하기&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://sjh836.tistory.com/96&quot; target=&quot;_blank&quot;&gt;CORS vs JSONP&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://zetawiki.com/wiki/%ED%81%AC%EB%A1%9C%EC%8A%A4-%EC%98%A4%EB%A6%AC%EC%A7%84_%EB%A6%AC%EC%86%8C%EC%8A%A4_%EA%B3%B5%EC%9C%A0_CORS&quot; target=&quot;_blank&quot;&gt;크로스-오리진 리소스 공유 CORS&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.slideshare.net/DohunKim2/about-cors?qid=04c92f17-1eff-4829-8dc7-c64f91f6f114&amp;amp;v=&amp;amp;b=&amp;amp;from_search=1&quot; target=&quot;_blank&quot;&gt;CORS (Cross-Origin Resource Sharing)와 SOP(Same Origin Policy)에 대한 이해&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://velog.io/@yesdoing/JSONP%EB%9E%80-jujowt4jy7&quot; target=&quot;_blank&quot;&gt;JSONP란?&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Thu, 05 Dec 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/1sthomecomingday/2019/12/05/cors-issue.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/1sthomecomingday/2019/12/05/cors-issue.html</guid>
        
        
        <category>1stHomecomingday</category>
        
      </item>
    
      <item>
        <title>Reflow와 Repaint</title>
        <description>&lt;h3 id=&quot;11월-기술면접때-받은-질문이었는데-용어가-낯설어서-공부하면서-정리해-보았습니다&quot;&gt;11월 기술면접때 받은 질문이었는데 용어가 낯설어서 공부하면서 정리해 보았습니다.&lt;/h3&gt;

&lt;h4 id=&quot;reflow&quot;&gt;Reflow&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;생성된 DOM 노드의 레이아웃 수치(너비, 높이, 위치 등) 변경 시 영향 받은 모든 노드의(자신, 자식, 부모, 조상(결국 모든 노드) ) 수치를 다시 계산하여(Recalculate), 렌더 트리를 재생성하는 과정이며 또한, Reflow 과정이 끝난 후 재 생성된 렌더 트리를 다시 그리게 되는데 이 과정을 Repaint 라 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;문서 내 노드들의 레이아웃, 포지션을 재계산 후 다시 뿌려주므로 Repaint보다도 더 심각한 퍼포먼스 저하를 유발시키는 프로세스입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;특정 엘리먼트에 대한 Reflow 발생 시, 페이지에서의 해당 요소는 즉시 Reflow State가 되며 해당 엘리먼트의 자식요소와 부모/조상 요소 역시 레이아웃 계산을 진행합니다. (결국은 페이지 전체를 다시 훑는 것이나 마찬가지)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;모든 엘리먼트의 위치와 길이 등을 다시 계산하는 것으로 문서의 일부 혹은 전체를 다시 렌더링합니다.
단일 엘리먼트 하나를 변경해도, 하위 엘리먼트나 상위 엘리먼트 등에 영향을 미칠 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어떠한 액션이나 이벤트에 따라 html 요소의 크기나 위치등 레이아웃 수치를 수정하면 그에 영향을 받는 자식 노드나 부모 노드들을 포함하여 Layout 과정을 다시 수행하게 됩니다. 이렇게 되면 Render Tree와 각 요소들의 크기와 위치를 다시 계산하게 됩니다. 이러한 과정을 Reflow라고 합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;repaint&quot;&gt;Repaint&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Reflow 과정이 끝난 후 재 생성된 렌더 트리를 다시 그리게 되는데 이 과정을 Repaint 라 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;엘리먼트의 스킨에 변화가 발생하지만, 레이아웃에는 영향을 미치지 않을 때 유발됩니다. (visibility, outline, background-color 등이
포함) Opera에 따르면 Repaint는 해당 행위가 발생하는 순간, 문서내 DOM tree의 다른 노드들의 스킨까지도 검증해야 하므로 비용이 높다고 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;레이아웃에는 영향을 주지 않지만, 가시성에는 영향을 주는 엘리먼트가 변경되면 발생합니다.
예를 들면, opacity, background-color, visibility, outline
오페라에 따르면, “브라우저가 DOM 트리에 있는 다른 모든 노드의 가시성을 확인해야 하므로 리페인트는 비용이 많이 든다”고 합니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Reflow만 수행되면 실제 화면에 반영되지 않습니다. Render Tree를 다시 화면에 그려주는 과정이 필요합니다. 결국은 Paint 단계가 다시 수행되는 것이며 이를 Repaint 라고 합니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;reflow-발생하는-상황&quot;&gt;Reflow 발생하는 상황&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;DOM 노드의 변경: 추가, 제거 업데이트&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DOM 노드의 노출 속성을 통한 변경: display:none은 리플로와 리페인트를 발생시키지만 비슷한 속성인 visibility:hidden은 요소가 차지한 영역을 유지해 레이아웃에 영향을 주지 않으므로 리페인트만 발생시킵니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스크립트 애니메이션: 애니메이션은 DOM 노드의 이동과 스타일 변경이 짧은 시간 내에 수차례 반복해 발생되는 작업입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;스타일: 새로운 스타일시트의 추가 등을 통한 스타일 정보 변경 또는 기존 스타일 규칙의 변경&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사용자의 액션: 브라우저 크기 변경, 글꼴 크기 변경 등&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;reflow를-최소화하고-성능을-향상시키는-방법&quot;&gt;Reflow를 최소화하고 성능을 향상시키는 방법&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Use Best-Practice Layout Techniques&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;레이아웃을 위해 인라인 스타일이나 테이블을 사용하지 않아야 합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;인라인 스타일은 HTML이 다운로드되고 추가 reflow를 트리거할 때 레이아웃에 영향을 미칩니다. 테이블은 셀 치수를 계산하기 위해 파서가 둘 이상의 패스를 필요로 하기때문에 비용이 많이 듭니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;테이블 레이아웃 사용: fixed 는 열 너비는 헤더 행 내용을 기반으로 하므로 표 형식의 데이트를 표시할때 도움이 됩니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;flexbox 의 위치와 크기가 HTML이 다운로드 될 때 변경될 수 있기 때문에 메인 페이지 레이아웃에 flex 아이템을 사용하면 성능이 저하 될 수 있습니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;CSS 규칙의 수를 최소화합니다 (Minimize the Number of CSS Rules)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;사용하는 규칙이 적을수록 reflow가 빨라집니다. 가능한 경우 복잡한 CSS Selector를 피해야 합니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;이 문제는 부트스트랩과 같은 프레임워크를 사용하는 경우 특히 문제가 될 수 있습니다. 제공된 스타일중 일부를 사용하는 사이트는 거의 없습니다. 사용되지 않는 CSS, uCSS, grunt-uncss, gulp-uncss와 같은 도구는 스타일의 도구와 파일의 크기를 상당히 줄일 수 있습니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DOM의 깊이를 최소화합니다 (Minimize DOM depths)
    &lt;ul&gt;
      &lt;li&gt;DOM 트리의 크기와 각 branch의 요소 수를 줄여야합니다. 문서가 작고 얕을수록 reflow 될 수 있습니다. 이전 브라우저를 지원하지 않는 경우 불필요한 wrapper 요소를 제거할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;하단의 DOM 트리에서 클래스를 변경합니다 (Update Classes Low in the DOM Tree)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;가능한 한 최대한 하단의 DOM 트리의 요소(즉, 중첩된 하위 항목이 여러 개 없는 요소)에서 클래스를 변경합니다. 이렇게 하면 reflow 범위가 필요한 만큼의 노드로 제한 될 수 있습니다. 본질적으로 중첩된 child 노드에 대한 영향이 최소인 경우에만 wrapper와 같은 부모 노드에 클래스 변경 사항을 적용합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;복잡한 애니메이션 flow에서 제거합니다 (Remove Complex Animations From the Flow)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;애니메이션이 position: absolute; 나 position: fixed; 로 문서의 flow 로 부터 제거되어 단일 요소로 적용되어 있는지 확인합니다. 이렇게 하면 문서의 다른 요소에 영향을 주지 않고 치수 및 위치를 수정할 수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;숨겨진 요소를 변경합니다 (Modify Hidden Elements)
    &lt;ul&gt;
      &lt;li&gt;display: none; 로 숨겨진 요소는 변경될 때 repaint 나 reflow 를 유발하지 않습니다. 가능한 경우 요소를 표시하기 하기전에 변경합니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Batch 로 요소 업데이트 (Update Elements in Batch)&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;한 번의 작업으로 모든 DOM 요소를 업데이트하여 성능을 향상시킬 수 있습니다. 이 간단한 예는 세가지 reflow를 발생시킵니다.&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;// before&lt;/p&gt;
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;// after&lt;/p&gt;
    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;myelement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;newstyles&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;     &lt;span class=&quot;nc&quot;&gt;.newstyles&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;200px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
         &lt;span class=&quot;nl&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;또한 DOM을 건드리는 시간을 최소화할 수 있습니다. bullet 목록을 만들겠다고 가정해 보겠습니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;각 요소를 하나씩 추가하면 한 번에 최대 7개의 reflow 가 발생합니다.(하나는 &amp;lt;ul&amp;gt;이 추가 될 때, 다른 하나는 &amp;lt;li&amp;gt;에 대해 3개, 텍스트에 대해 3개입니다.) 그러나, DOM fragment 을 사용하여 구현하고 메모리에 노드를 먼저 빌드하면 단일 reflow 가 구현 될 수 있습니다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;frag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createDocumentFragment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
     &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;item &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

     &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;영향을 받는 요소를 제한합니다. (Limit the Affected Elements)
많은 수의 요소가 영향을 받을 수 있는 상황을 피하십시오. 탭을 클릭하면 다른 콘텐츠 블록이 활성화되는 캡 콘텐츠 컨트롤을 고려하세요. 각 컨텐츠 블록의 높이가 다른 경우 주변 요소에 영향을 미칩니다. container 에 대한 고정 높이를 설정하거나 document 의 flow 에서 컨트로를 제거하여 성능을 향상 시킬 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;부드러운 애니메이션은 성능을 떨어뜨린다는 것을 알아야합니다. (Recognize that Smoothness Compromises Performance)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;브라우저 툴로 repaint 이슈 분석 (Analyze Repaint Issues with Browser Tools)
모든 mainstream 브라우저는 reflow 가 성능에 미치는 영향을 강조하는 개발자 도구를 제공합니다. Chrome, Safari 및 Opera와 같은 Blink/Webkit 브라우저에서 TimeLine 패널을 열고 작업을 기록하세요.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://minjung-jeon.github.io/assets/res/web/reflow_timeline.png&quot; alt=&quot;reflow_timeline&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;내용을-정리하면서-생각난-것들&quot;&gt;내용을 정리하면서 생각난 것들&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;부끄럽게도 여태 작업하면서 성능 최적화는 굉장히 어려울거라고 막연히 생각해서 공부해본 적이 없는데
막상 알아보니 그렇게 어려워서 적용을 못할 부분도 아니라는 생각이 들었습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;냥터레스트를 시작하기전에 이러한 부분도 좀더 생각했었으면 좋았을텐데 리팩토링을 할수 있는 부분을 찾아봐야 겠다는 생각이 들었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://webclub.tistory.com/346&quot; target=&quot;_blank&quot;&gt;Web Club&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://lists.w3.org/Archives/Public/public-html-ig-ko/2011Sep/att-0031/Reflow_____________________________Tip.pdf&quot; target=&quot;_blank&quot;&gt;Reflow 원인과 마크업 최적화 Tip&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/wonism/TIL/blob/master/front-end/browser/reflow-repaint.md&quot; target=&quot;_blank&quot;&gt;Reflow 와 Repaint&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://boxfoxs.tistory.com/408&quot; target=&quot;_blank&quot;&gt;박스여우 - BoxFox&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/10-ways-minimize-reflows-improve-performance/&quot; target=&quot;_blank&quot;&gt;sitepoint&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://minjung-jeon.github.io/10-Ways-to-Minimize-Reflows-and-Improve-Performance/&quot; target=&quot;_blank&quot;&gt;MINJUNG&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/11/22/reflow&repaint.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/11/22/reflow&repaint.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;소심하고-소소한-리뷰&quot;&gt;소심하고 소소한 리뷰&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;도서목록들을 업데이트하면서 최근 읽은 책의 한줄리뷰와 읽고 있는 책의 사진을 올려 보려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;데일 카네기 인간관계론 저: 데일 카네기 / 역: 임상훈 / 현대 지성&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/191104_book.jpg&quot; alt=&quot;데일 카네기 인간관계론 &quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗
    &lt;ul&gt;
      &lt;li&gt;한줄 리뷰: 운동매니아 좐아재의 개발자가 개발이외 신경쓰여야 할 분야에 대한 친절하고 세심한 안내서, 딴건 몰라도 건강관리는 해야 하는데…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;읽고-싶은-책-목록&quot;&gt;읽고 싶은 책 목록&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;생각하는 프로그래밍 저: 존 벤틀리 / 역: 윤성준, 조상민 / 인사이트&lt;/li&gt;
  &lt;li&gt;GoF의 디자인 패턴 저: 에릭 감마 / 역: 김정아 / 프로텍미디어&lt;/li&gt;
  &lt;li&gt;군주론 저: 마키아벨리 / 역: 강정인, 김경희 / 까치&lt;/li&gt;
  &lt;li&gt;시작하기엔 너무 늦지 않았을까?(원제 Jog On: How Running Saved My Life)  저: 벨라 마키 / 역: 김고명 / 비잉(Being)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 04 Nov 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2019/11/04/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2019/11/04/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>사이드프로젝트 냥터레스트1</title>
        <description>&lt;h2 id=&quot;사이드프로젝트-냥터레스트에-대해서-설명해보세요&quot;&gt;사이드프로젝트 냥터레스트에 대해서 설명해보세요.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;냥터레스트는 유기묘의 정보를 제공해주는 웹서비스입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;youtube-wrap&quot;&gt;
	&lt;iframe width=&quot;834&quot; height=&quot;511&quot; src=&quot;https://www.youtube.com/embed/Jg1u7te4EYI?showsearch=0&amp;amp;rel=0&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;기본셋은 오늘 날짜의 유기묘의 리스트를 무한 스크롤 형식으로 한 페이지에서  계속하여 보여집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest1.jpg&quot; alt=&quot;냥터레스트 소개 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;토글버튼아래에 툴팁박스에 안내버튼을 누르면 24시간동안 툴팁박스가 보이지 않게 됩니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest2.jpg&quot; alt=&quot;냥터레스트 툴팁박스 안내 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;토글버튼을 누르면 검색필터가 보이고 다시 누르면 숨겨집니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest2-1.jpg&quot; alt=&quot;냥터레스트 토글버튼 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;상단검색필터는  엔터없이 선택이나 입력시 원하는 리스트를 바로 볼 수 있게 구현하였습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;원하는 날짜를 시작일과 종료일로 선택할 수 있습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest3.jpg&quot; alt=&quot;냥터레스트 상단필터 날짜선택 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;품종 셀렉트박스로 원하는 품종을 선택한 후&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest4.jpg&quot; alt=&quot;냥터레스트 상단필터 품종선택 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;키워드를 넣어서 검색할 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest5.jpg&quot; alt=&quot;냥터레스트 상단필터 키워드 입력 &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;리스트를 클릭하면 팝업창이 열리며 상세정보를 볼 수 있는데 보호중은 스카이블루색이 기본이며&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest6.jpg&quot; alt=&quot;냥터레스트 팝업(보호중) &quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;종료시(입양,안락사,자연사 등등)는  빨강색으로 되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/nyangterest7.jpg&quot; alt=&quot;냥터레스트 팝업(종료) &quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;냥터레스트를-만들게-된-이유를-설명해주세요&quot;&gt;냥터레스트를 만들게 된 이유를 설명해주세요.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;협업자 한분과 같이 진행했는데 둘다 고양이를 좋아하여 고양이를 먼저 떠올렸고 
 그 중 유기묘에 대한 서비스를 만드는게 좋겠다 생각하며 만들게 되었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;냥터레스트는-무슨뜻인가요-&quot;&gt;냥터레스트는 무슨뜻인가요 ?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;고양이를 일컫는 냥 + 이미지공유 SNS 핀터레스트를 합쳐서 만든 이름입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;냥터레스트에서-사용된-기술-스택은-무엇인가요&quot;&gt;냥터레스트에서 사용된 기술 스택은 무엇인가요?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;프론트엔드 :  React.js&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;백엔드 : Node.js&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;DBMS(DB관리툴):  Amazon RDS (SQL - MYSQL)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;미들웨어 : Express&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;상태관리 라이브러리 : Mobx&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;좀더 상세한 스택은 링크를 참고해주세요. &lt;a href=&quot;https://stackshare.io/yoonucho/nyangterest&quot; target=&quot;_blank&quot;&gt;냥터레스트 사용 기술 스택&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;진행 단계&lt;/p&gt;

    &lt;p&gt;1단계 레이아웃 잡기 &lt;code class=&quot;highlighter-rouge&quot;&gt;ovenapp.io&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;2단계 회원가입 시스템 이용약관 구축&lt;/p&gt;

    &lt;p&gt;3단계 게시물 검색 시스템 구축&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;협업으로-진행시-어떤-방식으로-진행하였나요&quot;&gt;협업으로 진행시 어떤 방식으로 진행하였나요?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;우선 저 혼자 진행하는게 아니라  간단한 협업 규칙을 만들었고 &lt;a href=&quot;https://github.com/henyy1004/nyangterest/blob/master/collaboration_report/collaboration_rules.md&quot; target=&quot;_blank&quot;&gt;냥터레스트 협업규칙&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;각자 할 영역을 정하여 해당 영역의 프론트와 백엔드를 전부 맡는 방식으로 진행하였습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 중에 제가 맡은 부분은 메인콘텐츠(아이템 리스트), 이용약관 개인정보 처리방침, 이용툴팁, 상단 검색필터, 리스트 상세팝업입니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;진행하다가 의문점이 있거나 의논할게 있으면 서로의 시간이 허락하는 시간과 날짜에 온라인과 오프라인으로  회의를 하였으며 회의내용은 협업문서에 기록해두었습니다.
&lt;a href=&quot;https://github.com/henyy1004/nyangterest/tree/master/collaboration_report&quot; target=&quot;_blank&quot;&gt;냥터레스트 협업문서&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기본적으로는 깃헙의 projects를 이용하여 각자 한 일들과 할 일들을 감시(?)또는 파악 할 수 있습니다.
 &lt;a href=&quot;https://github.com/henyy1004/nyangterest/projects/1&quot; target=&quot;_blank&quot;&gt;냥터레스트 Projects &lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;내용이 길어져서 다음 페이지로 이동합니다.&lt;/em&gt;&lt;/strong&gt;  &lt;a href=&quot;https://yoonucho.github.io/side_project/2019/10/14/nyangterest_issue.html&quot; target=&quot;_blank&quot;&gt;😸 냥터레스트 진행시  이슈와 해결과정 보기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/side_project/2019/10/14/nyangterest_view.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/side_project/2019/10/14/nyangterest_view.html</guid>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>사이드프로젝트 냥터레스트2</title>
        <description>&lt;h2 id=&quot;진행중-어려웠던-점은-무엇이며-어떻게-해결하였나요&quot;&gt;진행중 어려웠던 점은 무엇이며 어떻게 해결하였나요?&lt;/h2&gt;

&lt;h3 id=&quot;1-cors-이슈&quot;&gt;1. CORS 이슈&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;맨처음으로 겪었던 문제는 CORS 이슈였습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;유기묘들의 정보를 &lt;a href=&quot;https://www.data.go.kr/&quot; target=&quot;_blank&quot;&gt;공공데이터포털&lt;/a&gt;에서 제공받았는데 API주소를 프론트에서 직접적으로 넣으면 
이슈를 뿜는걸 처음으로 알게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/code7.gif&quot; alt=&quot;error_msg&quot; title=&quot;안녕 CORS 이슈 월드에 온 것을 환영해&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;h4 id=&quot;방법-모색-1&quot;&gt;방법 모색 1&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cors이슈를 해결하기 위해서 서버 세팅을 해야 하는게 처음에는 납득이 가지 않았습니다. 그래서 프론트에서만 해결할 수 방법들을 모색하였습니다. 
대략적으로 4가지 방법을 확인하였습니다.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;크롬 확장 프로그램 설치 - [Allow CORS: Access-Control-Allow-Origin] &lt;code class=&quot;highlighter-rouge&quot;&gt;chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi?utm_source=chrome-ntp-icon&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;크롬에서 –disable-web-security 옵션을 추가하여 크롬 실행&lt;/li&gt;
      &lt;li&gt;JSONP 방식으로 요청&lt;/li&gt;
      &lt;li&gt;API 요청서버에서 cors 설정을 지원하는지 확인&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 중에  3번은  여러 보안상 이슈로 인하여 W3C에서는 2009년 채택된 CORS 방식의 HTTP 통신을 권장하고 있다고 해서 패스하였고&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;4번은 공공데이터포털에서 CORS 이슈에 대한 문서를 제공하는 걸 보니 CORS설정을 지원하지는 않는거 같아 1번과 2번을 시도하게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;시도결과&quot;&gt;시도결과&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Allow CORS: Access-Control-Allow-Origin 설치 - 이상하게도  해결이 되지 않았고 오히려 기존 유투브와 AWS사이트에서 에러를 발생하는 문제가 발생하여서 실패&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;–disable-web-security - 역시나 실패&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;방법모색-2&quot;&gt;방법모색 2&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;결국 이런저런 삽질끝에 서버세팅을 하여야 해결할 수 있겠구나 깨닫게 되었습니다. 😢&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;백알못의-고민&quot;&gt;백알못의 고민&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;백알못 (백엔드를 알지 못함)이라 본인의 무지에 너무 답답하였습니다.&lt;br /&gt;
 서버는 node.js로 세팅을 했는데 이걸 API서버와 어떻게 연결해야 할지
 서버와 프론트는 어떻게 연결해야 할까 ? DBMS가 있어야 하나 당장 DB는 필요없는데 같은 엉뚱하고 바보같은 고민에 휩싸였었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;해결과정&quot;&gt;해결과정&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;cors모듈을 설치&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;npm install cors –save&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;API서버와 어떻게 연결해야 할까&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;node-fetch를 설치하여 로컬 서버에서 fetch로 공공데이터 API주소를 요청하였습니다.&lt;/li&gt;
    &lt;/ul&gt;

 	  * npm install node-fetch –save
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;server.js (서버 localhost:8080)&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;cors&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node-fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;openapi.animal.go.kr/openapi/service/rest/abandonmentPublicSrvc/abandonmentPublic?serviceKey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;발급받은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;서비스키&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
	)
		.then(response =&amp;gt; response.json())
		.then(json =&amp;gt; {
			res.send(json);
		})
		.catch(() =&amp;gt; {
			res.send(JSON.stringify({ message: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; }));
		});
});

// 중략

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;서버와 프론트는 어떻게 연결해야 할까&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프론트 에서 fetch로 localhost:8080을 요청하였습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;App.js (프론트 localhost:3000)&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;callApi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;localhost:8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;삽질-이유를-정리해보자면&quot;&gt;삽질 이유를 정리해보자면&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;어짜피 있어야 할 서버인데 서버를 만들고 싶지 않은 이상한 고집때문에 며칠을 몸고생 맘고생을 하였습니다. 😔&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전체적인 흐름을 이해하지 못한게 가장 큰 원인이라 생각하였습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;느낀점&quot;&gt;느낀점&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;고집을 부리면 몸과 마음이 고생한다는걸 몸소 느꼈습니다. 아니다 싶으면 빨리 포기할 줄도 알아야 한다고 생각했습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;사실 몇 달전에 혼자 진행하다 보류한 사이드프로젝트가 있었는데 그 때 정확히 CORS모듈이 왜 필요한지도 모르고 설치를 했어서 이런 문제는 겪어본적이 없이&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;무난히 지나갔었습니다. 그당시 그냥 지나간 댓가를 톡톡히 치뤘다고 생각합니다. 작은 모듈설치도 가볍게 여기지 말자고 생각했습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;2-프로젝트에-mobx-적용하기&quot;&gt;2. 프로젝트에 MobX 적용하기&lt;/h3&gt;

&lt;h4 id=&quot;과정-1&quot;&gt;과정&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;eject 명령어로 CRA(Creat-React-App) 추출&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt; yarn run eject &lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;yarn.lock파일 제거&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;MobX 및 관련 라이브러리 설치&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt; yarn add mobx mobx-react babel-preset-mobx &lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;package.json 파일을 연 뒤 babel 부분 수정&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
				&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@babel/plugin-proposal-decorators&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;legacy&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
				&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;@babel/plugin-proposal-class-properties&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;loose&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;state , action 로직 분류 및 위치 이동&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;setState는 불필요한 렌더링을 만듭니다.&lt;/li&gt;
      &lt;li&gt;@action으로 state를 동기적 방식으로 변경할수 있습니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt; 기존 src폴더 구조 &lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/tree1.gif&quot; alt=&quot;기존 src폴더 구조&quot; /&gt;&lt;/p&gt;

&lt;pre&gt;MobX적용후 src 폴더 구조&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/tree2.gif&quot; alt=&quot;MobX적용후 src 폴더 구조&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;root에 있는 index.js에 Provider로 프로젝트에 스토어 적용&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
  	&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mobx-react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RootStore&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;./Stores&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 스토어 인스턴스 생성&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RootStore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// App 컴포넌트를 Provider컴포넌트로 살포시 감싸준다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Provider&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/Provider&amp;gt;, document.getElementById&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;&quot;root&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;List.js에 @observer를 사용한다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 위에 @inject(‘listStore’)를 넣어주면  listStore를 props로 전달받을 수 있게 된다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
	&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;inject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mobx-react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;inject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;listStore&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observer&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중략&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;listStore.js에서 observable를 사용하여 state를 관리&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
	&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mobx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;72&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hasMore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;isLoading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;observable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;async, await은 state가 변화하는 코드를  runInAction 유틸리티로 감싸 action을 실행 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
	&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;observable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;runInAction&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;mobx&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 매개변수로 pageNo를 넣어준다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;loadList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/page/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

			&lt;span class=&quot;nx&quot;&gt;runInAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &quot;numOfRows:&quot; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &quot;pageNo:&quot; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItems&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;


		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;runInAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;기존 액션함수들도 문법에 맞게 코드를 수정해준다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;setItems&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;loadMore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isLoading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrolling&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loadList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중략&lt;/span&gt;
	

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;어려웠던-점&quot;&gt;어려웠던 점&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;정말 1도 모를때는 별도의 state관리 개념이 자식 컴포넌트까지 완전히 분리하는 작업인가라고 상상했었습니다. ㅋ&lt;/li&gt;
  &lt;li&gt;포스팅이나 관련 유투브를 보고 튜토리얼을 진행하면서  이걸 내 프로젝트에는 어떻게 적용해야하나 막막하고 어렵게 느껴졌습니다.&lt;/li&gt;
  &lt;li&gt;실제로 적용하면서는 보기에는 제대로 동작하는 코드를 다시 바꿔야하는 과정이 두려워서 코드를 바꾸는데 한없이 쭈구리가 되었었습니다.&lt;/li&gt;
  &lt;li&gt;@observable를 붙이기만 해도 된다는 걸 의심했었습니다.&lt;/li&gt;
  &lt;li&gt;state가 적용되는 코드를 분류하는 과정이 이게 제대로 된게 맞는지 확신이 없었습니다.&lt;/li&gt;
  &lt;li&gt;MobX적용하는 문법(?)이  검색해봤을때 개발자의 취향이나 필요에  따라서  조금씩 다른 부분이 있었고 저는 어떤걸 적용해야 할지 고민이 되었었습니다.&lt;/li&gt;
  &lt;li&gt;MobX를 적용하면서 제대로 적용을 못했을때 에러를 뿜거나 제대로 실행이 안되어서 좌절도 하였었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;느낀-점&quot;&gt;느낀 점&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;state와 액션을 따로 분류하니 리액트 컴포넌트를 정말 뷰로 사용할 수 있겠구나 감탄하며 구조의 깔끔함을 경험하였습니다!&lt;/li&gt;
  &lt;li&gt;이래서 흑마법 흑마법하는구나라며 작은 공감을 하게 되었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;3-상단-필터박스-달력으로-지정한-날짜-데이터--연동-구현&quot;&gt;3. 상단 필터박스 달력으로 지정한 날짜 데이터  연동 구현&lt;/h3&gt;

&lt;h4 id=&quot;발생-문제&quot;&gt;발생 문제&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;기본 일주일치 날짜 데이터는  제대로 검색이 된걸 확인하였습니다.&lt;/li&gt;
  &lt;li&gt;그러나 출력되지 않은 일자에 대한 내용은 나오지 않았습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;해결방법-모색&quot;&gt;해결방법 모색&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;백엔드에서 bgnde과 endde를 바디로 받은 주소를 fetch하는 방식&lt;/li&gt;
  &lt;li&gt;달력 lib에서 featch관련 api 찾기&lt;/li&gt;
  &lt;li&gt;제공되는 api가 없으면 다른 달력 lib로 바꾸기&lt;/li&gt;
  &lt;li&gt;result로 새로운페이지로 넘기기&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;백알못의-고민-1&quot;&gt;백알못의 고민&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;우선 클라이언트에서 서버에 요청을 하면 서버는 응답을 해야겠지&lt;/li&gt;
  &lt;li&gt;백엔드의 리퀘스트 파라미터를  react에 어떻게 넘기나&lt;/li&gt;
  &lt;li&gt;또 react의 bgnde와 endde 값을 백엔드에 어떻게 요청해야 할까 고민의 연속이었습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;나름의-전략&quot;&gt;나름의 전략&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;백엔드쪽 node.js 공공데이터포털 open Api의 요청변수 bgnde(공고 시작일)와 endde(종료일)을  post방식으로 body로 받아와서  리액트쪽에서 달력 날짜를 선택할 시 from과 to값으로 넣어서 원하는 날짜를 검색할시 결과물을 보여주는 방식이었습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;백엔드쪽에서 바디에 bgnde와 endde에 YYYYMMDD형식으로 스트링값을 넣어보자.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;달력은 전체 리스트에서 검색해야할텐데 그래서 infinite scroll이 아닌 result에서 넘겨야할거같다?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리스트가 처음 나올때는 날짜가 필터링되기전의 데이터가 나와야할거같다 handleOnChange함수를 실행했을때 바뀌는걸로&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;달력 from, to값을 undefined로 설정하자.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;고통과-고난의-시간&quot;&gt;고통과 고난의 시간&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;거진 일주일 내내 삽질을 했었습니다. 요청변수값이 undefined가 나오니 뭘 어찌할 수가 없었습니다… ㅠ^ㅠ
더구나 post로 요청하려하니 웹에서는 확인도 할수 없고 포스트맨으로 하는것도 한계가 있고 그래서 get방식으로 바꿔서 시도해보았습니다.
개발자도구 네트워크탭에서 fetch url의 주소가 보이니 훨씬 수월해졌습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다시 삽질끝에 알아낸 건 결국 저번과 비슷한 type의 충돌문제였습니다.
백엔드 요청변수 bgnde와 endde의 타입을 string으로 변경하니 드디어 검색이 되었습니다!!! 😹&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
  &lt;span class=&quot;c1&quot;&gt;// Node.js&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/page/:bgnde/:endde/:numOfRows/:id/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

		&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bgnde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/abandonmentPublic?ServiceKey=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;_type=json&amp;amp;bgnde=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bgnde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;endde=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;upkind=422400&amp;amp;numOfRows=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;amp;pageNo=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bgnde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;totalCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;System Error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 &lt;span class=&quot;c1&quot;&gt;// React.js&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;action&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;loadList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

			&lt;span class=&quot;c1&quot;&gt;// 중략...&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;moment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;YYYYMMDD&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`/page/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenFrom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;happenTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;numOfRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pageNo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// 중략...&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;나의-착각&quot;&gt;나의 착각&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;요청변수를 post로 받으면 그값이 res.json에 담겨야 한다는 큰 착각을 하였었습니다.
제가 이렇게 착각한 이유중 하나는 검색해서 본 유투브 영상이나 글들은 새로운 값을 넣는 예시였기 때문에 그리 생각을 하게 되었었습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;달력연동에서 fetch는 어떻게 연결을 해야하나 라이브러리 api를 찾아보았으나 없어서 막막했었습니다.
달력에서 입력받는 value값이 to와 from인데 fetch와 어떻게 접목(?)시켜야하나 싶어서 엉뚱하게도 fetch기능을 제공하는 달력라이브러리가 있나 검색을 열심히 하였으나 마땅한 라이브러리를 찾지 못했었습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;정말 부끄럽게도 이번에 삽질하면서야 안 사실인데 백엔드의 파라미터와 프론트에서의 파라미터이름이 동일해야 하는줄 알았습니다.	
그래서 요청변수 bgnde와 endde에  날짜 value값 from과 to을 어떻게 넣어야 하나라고만 생각을 했었다가 
파라미터이름이 동일하지 않아도 된다는게 기억나서 url에 파라미터로 바로 넣으면 되지 않을까라는 생각이 들었고 시도하였고 
그 생각이 맞았음에 살짝 허무하면서도 신기하다고 생각했습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 후 Post방식을 해보고서야 알게 되었는데 Get방식은 url에 요청변수를 그대로 넣기 때문에 변수이름이 달라도 괜찮지만 Post는 Body에 싣는거기 때문에
백엔드와 이름이 동일해야 백엔드가 제대로 값을 받아오는 걸 알게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;느낀-점-1&quot;&gt;느낀 점&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;혼자 머리싸매고 고민하다가 개발자 커뮤니티나 지인 개발자분에게 질문을 하려고 보니 내용정리가 필요했고  그 과정중에 이유를 발견할 수 있었습니다.
   해결이 되지 않을때는 풀리지 않는 문제에 대해서 생각을 정리 하는 시간이 필요하다고 깨달았습니다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;문제가 해결되지 않을때는 잠시 그 환경에서 벗어나는 것도(?) 필요하다고 생각했습니다. 휴식으로 머리를 맑게 하고 다시 그 환경으로 들어갈 때 수월해지는 경험도 하게 되었습니다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;내용이 길어져서 다음 페이지로 이동합니다.&lt;/em&gt;&lt;/strong&gt;  &lt;a href=&quot;https://yoonucho.github.io/side_project/2020/01/14/nyangterest_code.html&quot; target=&quot;_blank&quot;&gt;😸 냥터레스트 진행시  리팩토링 코드 보기&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/side_project/2019/10/14/nyangterest_issue.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/side_project/2019/10/14/nyangterest_issue.html</guid>
        
        
        <category>side_project</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;도서-목록&quot;&gt;도서 목록?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;여전히 리뷰를 쓸 자신이 없어서 우선 목록들을 업데이트한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 비잉(Being)(로크미디어의 인문, 에세이 브랜드)&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;소프트스킬 저: 존 손메즈 / 역: 이미령, 김태곤 / 길벗&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽고-싶은-책-목록&quot;&gt;읽고 싶은 책 목록&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;GoF의 디자인 패턴 저: 에릭 감마 / 역: 김정아 / 프로텍미디어&lt;/li&gt;
  &lt;li&gt;군주론 저: 마키아벨리 / 역: 강정인, 김경희 / 까치&lt;/li&gt;
  &lt;li&gt;시작하기엔 너무 늦지 않았을까?(원제 Jog On: How Running Saved My Life)  저: 벨라 마키 / 역: 김고명 / 비잉(Being)&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 14 Oct 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2019/10/14/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2019/10/14/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>도서 목록</title>
        <description>&lt;h2 id=&quot;도서-목록&quot;&gt;도서 목록?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;작년 10월부터 각성(?)하여 책을 구입하거나 선물받아서 읽고 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;아직 리뷰를 쓸 자신이 없어서 우선 목록들을 기록하고자 한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽은-책-목록&quot;&gt;읽은 책 목록&lt;/h3&gt;

&lt;h4 id=&quot;2018년&quot;&gt;2018년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;완벽한 공부법 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;일취월장 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;뼈있는 아무말 대잔치 저: 신영준, 고영성 / 로크미디어&lt;/li&gt;
  &lt;li&gt;웹 여행을 시작하는 퍼블리셔를 위한 가이드 저: 김민종 / 느린생각&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;2019년&quot;&gt;2019년&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;함께 자라기- 애자일로 가는길 저: 김창준 / 인사이트&lt;/li&gt;
  &lt;li&gt;한 권으로 그리는 컴퓨터과학 로드맵 저: 블라드스톤 페헤이라 필루 / 역: 박연오 / 인사이트&lt;/li&gt;
  &lt;li&gt;소프트웨어 장인 저: 산드로 만쿠소 / 역: 권오인 / 길벗&lt;/li&gt;
  &lt;li&gt;어느날 고양이가 내게로 왔다 저: 보경 / 불광출판사&lt;/li&gt;
  &lt;li&gt;성공하는 프로그래밍 공부법 저: 남재창, 박지현, 박재성, 고종범 / 로드북&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;현재-읽고-있는-책&quot;&gt;현재 읽고 있는 책&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그래머의 길, 멘토에게 묻다 저: 데이브 후버, 애디웨일 오시나이 / 역: 강중빈 / 인사이트&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;읽고-싶은-책-목록&quot;&gt;읽고 싶은 책 목록&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;인생의 마지막 순간에서 저: 샐리 티스데일 / 역: 박미경 / 로크미디어&lt;/li&gt;
  &lt;li&gt;군주론 저: 마키아벨리 / 역: 강정인, 김경희 / 까치&lt;/li&gt;
  &lt;li&gt;피플웨어 저: 톰 디마르코, 티모시 리스터 / 역: 박재호, 이해영 / 인사이트&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/book_list/2019/07/05/book_list.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/book_list/2019/07/05/book_list.html</guid>
        
        
        <category>book_list</category>
        
      </item>
    
      <item>
        <title>이슈노트 8</title>
        <description>&lt;h2 id=&quot;cors-이슈를-처음으로-맞이하다&quot;&gt;CORS 이슈를 처음으로 맞이하다.&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;사이드프로젝트에 공공데이터포털 API를 이용하여 프론트엔드 라이브러리인 리액트에서 데이터를 가져와서 화면에
출력하는 시도를 하였으나 CORS이슈로 빈화면에 콘솔창에 에러메세지를 뿜음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;원인&quot;&gt;원인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CORS 이슈&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/code7.gif&quot; alt=&quot;error_msg&quot; title=&quot;안녕 CORS 이슈 월드에 온 것을 환영해&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;cors-이슈란&quot;&gt;CORS 이슈란&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cross-Origin Resource Sharing의 약자로 기존 도메인에서 다른 도메인 요청이 들어 왔을때 요청된 웹페이지 자원에 대하여 사용을 허가하는 메커니즘이다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;웹 브라우저가 사용하는 정보를 읽을 수 있도록 허가된 출처 집합을 서버에게 알려주도록 허용하는 HTTP 헤더를 추가함으로써 동작한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;h4 id=&quot;방법-모색-1&quot;&gt;방법 모색 1&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Cors이슈를 해결하기 위해서 서버 세팅을 해야 하는게 처음에는 납득이 가지 않았다. 그래서 프론트에서만 해결할 수 방법들을 모색하였다. 대략 4가지 방법이 확인되었다.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;구글확장 프로그램 설치 - [Allow-Control-Allow-Origin: *] (https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi?utm_source=chrome-ntp-icon)&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;크롬에서 –disable-web-security 옵션을 추가하여 크롬 실행&lt;/li&gt;
      &lt;li&gt;JSONOP 방식으로 요청&lt;/li&gt;
      &lt;li&gt;API 요청서버에서 cors 설정을 지원하는지 확인&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이 중에 3번은 우회방법이라 내키지 않아서 보류, 4번은 공공데이터포털이 지원을 안하는거 같아서 보류, 1번과 2번을 시도해 보았다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;결과&quot;&gt;결과&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Allow-Control-Allow-Origin: * 설치 - 이상하게 나는 해결이 되지 않고 오히려 기존 유투브와 AWS사이트에서 에러를 발생하는 문제가 발생하였다. 실패&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;–disable-web-security - 역시나 실패&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;방법모색-2&quot;&gt;방법모색 2&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;결국 이런저런 삽질끝에 서버세팅을 하여야 해결할 수 있겠구나 깨닫게 됨 😢&lt;/li&gt;
  &lt;li&gt;그럼 서버를 세팅해보자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;고민&quot;&gt;고민&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;백알못 (백엔드를 알지 못함)의 무지의 답답함 - 서버는 node.js로 세팅을 했는데 이걸 API서버와 어떻게 연결해야 할까&lt;/li&gt;
  &lt;li&gt;서버와 프론트는 어떻게 연결해야 할까 DBMS가 있어야 하나 당장 DB는 필요없는데 같은 엉뚱하고 바보같은 고민에 휩싸임&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;해결&quot;&gt;해결&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;API서버와 어떻게 연결해야 할까&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;node-fetch를 설치하여 내 로컬 서버에서 fetch로 공공데이터 API를 요청하였다.&lt;/li&gt;
    &lt;/ul&gt;

 	  * npm install node-fetch –save
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;server.js (서버 http://localhost:8080)&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;node-fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;router&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://openapi.animal.go.kr/openapi/service/rest/abandonmentPublicSrvc/abandonmentPublic?serviceKey=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;발급받은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;서비스키&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
	)
		.then(response =&amp;gt; response.json())
		.then(json =&amp;gt; {
			res.send(json);
		})
		.catch(() =&amp;gt; {
			res.send(JSON.stringify({ message: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; }));
		});
});

// 중략

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;서버와 프론트는 어떻게 연결해야 할까&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;프론트 에서 fetch로 http://localhost:8080을 요청하였다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;App.js (프론트 http://localhost:8080)&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;callApi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://localhost:8080&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;삽질-이유를-정리해보자면&quot;&gt;삽질 이유를 정리해보자면&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;어짜피 있어야 할 서버인데 서버를 만들고 싶지 않은 이상한 고집때문에 며칠을 몸고생 맘고생을 하였다. 😔&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;전체적인 흐름을 이해하지 못하였다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/issue_note/2019/05/03/cors.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/issue_note/2019/05/03/cors.html</guid>
        
        
        <category>issue_note</category>
        
      </item>
    
      <item>
        <title>Rest와 WebSocket의 차이</title>
        <description>&lt;h3 id=&quot;rest와-websocket의-차이&quot;&gt;Rest와 WebSocket의 차이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;가장 큰 차이점은 접속을 유지하는지의 여부이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;websocket이전의-양방향-통신-방법&quot;&gt;WebSocket이전의 양방향 통신 방법&lt;/h3&gt;

&lt;h3 id=&quot;rest&quot;&gt;Rest&lt;/h3&gt;

&lt;h4 id=&quot;polling&quot;&gt;Polling&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트가 서버에서  Http Request를 주기적으로 요청하고 서버가 응답하는 방식&lt;/li&gt;
  &lt;li&gt;가장 쉬운 방법이지만 클라이언트의 수가 증가하면 서버의 부담도 커진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;long-polling&quot;&gt;Long Polling&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트가 서버에 Http Request를 요청하면  서비는 대기하고 있다가 이벤트 발생시 클라이언트에게 응답하는 방식&lt;/li&gt;
  &lt;li&gt;Polling 처럼 불필요한 요청에 계속 응답하는 것이 아니기 때문에 요청에 따른 커넥션 맺는 과정에서 발생하는 비용이 줄어든다. 하지만 클라이언트의 수가 증가하면, 
그에 따른 응답을 해야하는 수도 증가하기 때문에 Polling과 큰 차이는 없게 된다. 또한. 다수의 클라이언트가 동시에 이벤트가 발생할 경우 
서버는 각 클라이언트에게 응답을 하게 되고 그 다수의 클라이언트는 서버에게 곧바로 요청을 하기 때문에 이 순간 서버의 부담도 커진다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;streaming&quot;&gt;Streaming&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Long Polling과 마찬가지로 클라이언트에서 서버로 일단  Http Request를 요청한다 서버에서 클라이언트로 이벤트를 전달할 때 해당 요청을 끊지 않고 필요한 메시지만 보내기를(flush) 반복하는 방식이다.&lt;/li&gt;
  &lt;li&gt;Long Polling에 비해 서버에서 메시지를 보내고도 다시 Http Requestt 연결을 하지 않아도 되어 부담이 경감될것으로 보인다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;ajax&quot;&gt;AJAX&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;AJAX는 Javascript의 XmlHttpRequest 객체를 기반으로 한다. 비동기 Javascript 및 XML의 축약 된 양식이다 . XmlHttpRequest 객체를 사용하면 전체 웹 페이지를 다시 로드하지 않고도 Javascript를 실행할 수 있다. AJAX는 웹 페이지의 일부만 송수신&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서버가 요청없는 클라이언트에게 먼저 통신을 할수 있는 방법이 없음. 반이중 통신&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;websocket&quot;&gt;WebSocket&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/WebSockets-Diagram.png&quot; alt=&quot;WebSockets-Diagram&quot; title=&quot;WebSockets-Diagram&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;순수 웹 환경에서 실시간 (양방향) 통신을 위한 스펙&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;서버와 클라이언트가 지속적으로 연결된 TCP라인을 통해 실시간으로 데이터를 주고 받을 수 있도록하는 HTML5의 새로운 사양&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일반적인 TCP소켓과 같이 연결지향 양방향 전이중 통신이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;채팅, 게임, 실시간 주식차트와 같은 실시간이 요구되는 응용프로그램 개발에 사용가능&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;클라이언트와 서버간에 전이중 통신을 수행하려면 클라이언트가 서버로 HTTP UPGRADE 요청을 보내야 한다. 이를 웹 소켓 프로토콜 핸드 쉐이크라고한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;http://blog.naver.com/PostView.nhn?blogId=foxmann&amp;amp;logNo=90140923533&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://www.pubnub.com/blog/2015-01-05-websockets-vs-rest-api-understanding-the-difference/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://lkhlkh23.tistory.com/121&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://medium.com/@flsqja12_33844/http%EC%97%90%EC%84%9C%EB%B6%80%ED%84%B0-websocket%EA%B9%8C%EC%A7%80-94df91988788&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://adrenal.tistory.com/20&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://m.mkexdev.net/98&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Mon, 01 Apr 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/04/01/restVSwebsocket.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/04/01/restVSwebsocket.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>Web Server와 WAS의 차이</title>
        <description>&lt;h3 id=&quot;web-server&quot;&gt;Web Server&lt;/h3&gt;

&lt;h4 id=&quot;web-server-1&quot;&gt;Web Server&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;클라이언트가 보내는 HTTP요청을 받아 서버에 있는  HTML, CSS, 자바스크립트를 전송하는 역할, 리소스 송신&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;종류&quot;&gt;종류&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;아파치&lt;/li&gt;
  &lt;li&gt;nginx&lt;/li&gt;
  &lt;li&gt;IIS&lt;/li&gt;
  &lt;li&gt;node.js&lt;/li&gt;
  &lt;li&gt;WebtoB&lt;/li&gt;
  &lt;li&gt;Mongoose&lt;/li&gt;
  &lt;li&gt;Lighttpd&lt;/li&gt;
  &lt;li&gt;LightSpeed&lt;/li&gt;
  &lt;li&gt;Zeus&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;web-application-server&quot;&gt;Web Application Server&lt;/h3&gt;

&lt;h4 id=&quot;web-application-server-1&quot;&gt;Web Application Server&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;비즈니스 로직 수행 (서블릿(Servlet)을 통해 JSP를 처리하고, 서버 하드웨어의 쓰레드를 처리하고, 데이터베이스에 접속하여 SQL 쿼리문에 대한 결과값을 반환하는 역할)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;대부분이 자바 기반으로 주로 자바 EE 표준을 수용하고 있으나, 자바 기반이지만 자바 EE 표준을 따르지 않는 제품과 .NET이나 Citrix 기반인 비 자바 계열도 존재함.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;종류-1&quot;&gt;종류&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;톰캣 (Web Server 기능 포함)&lt;/li&gt;
  &lt;li&gt;JEUS&lt;/li&gt;
  &lt;li&gt;WebLogic&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;web-server와-was의-차이&quot;&gt;Web Server와 WAS의 차이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Web Server는 정적인 데이터를 처리 (ex: 이미지파일, HTML문서)&lt;/li&gt;
  &lt;li&gt;WAS는 정적,동적처리 둘다 가능하지만 효율적인 자원관리를 위해 동적인 데이터를 처리&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://jeong-pro.tistory.com/84&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://gmlwjd9405.github.io/2018/10/27/webserver-vs-was.html&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://limmmee.tistory.com/4&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://namu.wiki/w/%EC%9B%B9%20%EC%84%9C%EB%B2%84?from=%EC%9B%B9%20%EC%95%A0%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98%20%EC%84%9C%EB%B2%84#s-6&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://ko.wikipedia.org/wiki/웹_애플리케이션_서버&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Mon, 18 Mar 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/03/18/webserverVSwas.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/03/18/webserverVSwas.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>axios VS fetch</title>
        <description>&lt;h3 id=&quot;무엇을-할때-사용하는가&quot;&gt;무엇을 할때 사용하는가?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;애플리케이션에서 사용할 데이터를 요청할때&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;왜-사용해야-하는가&quot;&gt;왜 사용해야 하는가&lt;/h3&gt;

&lt;h4 id=&quot;fetch&quot;&gt;&lt;strong&gt;[fetch]&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;import를 하지 않고 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;Promise기반 비동기  API 라이브러리&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;axios&quot;&gt;&lt;strong&gt;[axios]&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;JSON 데이터의 자동 변환을 수행한다.&lt;/li&gt;
  &lt;li&gt;Promise기반 비동기  API 라이브러리&lt;/li&gt;
  &lt;li&gt;API URL의 기본 인스턴스를 만들 수 있다.&lt;/li&gt;
  &lt;li&gt;fetch보다 다양한 기능을 지원한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;단점은-뭐가-있나&quot;&gt;단점은 뭐가 있나&lt;/h3&gt;

&lt;h4 id=&quot;fetch-1&quot;&gt;&lt;strong&gt;[fetch]&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;요청을 취소하는 abort 메서드를 지원하지 않는다.&lt;/li&gt;
  &lt;li&gt;IE 지원안함&lt;/li&gt;
  &lt;li&gt;response timeout API 제공이 안된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;axios-1&quot;&gt;&lt;strong&gt;[axios]&lt;/strong&gt;&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;IE 지원안함&lt;/li&gt;
  &lt;li&gt;fetch보다 무겁다(?)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실제-사용-예시&quot;&gt;실제 사용 예시&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;[fetch 사용 예시]&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://someurl.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;cors&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;application/json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Content-Type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;application/json;charset=UTF-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;property_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;property_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value_two&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseOK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// do something with data&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;[axios 사용 예시]&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;https://someurl.com&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Accept&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;application/json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Content-Type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;application/json;charset=UTF-8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;property_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;property_two&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value_two&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseOK&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;responseOK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// do something with data&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;주관적인-결론은&quot;&gt;주관적인 결론은&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;리액트같은 SPA에서는 기존 요청을 취소할 수 있는 axios 라이브러리를 사용하는게 유지보수를 위해서도 좋을거 같다라는 생각이 들었다. 그리고 IE를 지원안하는거 말고는 안 쓸 이유가 없다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;추가내용을 적자면: axios의 자동으로 json객체로 변환하는 특징은 (내가 장점으로 생각했던)
멘토님의 말씀에 의하면 유연하지 않을수 있어서 오히려 단점이 될 수 있다.&lt;/p&gt;

    &lt;p&gt;이유는 서버에서 보내는 데이터 type과 클라이언트의 데이터 type이 서로 다를 경우가 있기 때문에 되도록이면 서버, 클라이언트에서 type 변환을 하고 네트워크 상으로 주는 데이터는 encoding, byte array 형태로 주고 받는게 제일 안전하고 깔끔하다.
(사실 byte array에 대한 개념이 잡혀있지 않은 상태라 이것도 검색해봐야지.)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;참고사이트&quot;&gt;참고사이트&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;https://developer.mozilla.org/ko/docs/Web/API/Fetch_API&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://medium.com/little-big-programming/%EB%82%B4%EA%B0%80-fetch-api%EB%A5%BC-%EC%93%B0%EC%A7%80-%EB%AA%BB%ED%96%88%EB%8D%98-%EC%9D%B4%EC%9C%A0-3c23f0ec6b82&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://css-tricks.com/using-data-in-react-with-the-fetch-api-and-axios/&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;http://www.realhanbit.co.kr/books/87/pages/1563/preview&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://stackoverflow.com/questions/40844297/what-is-difference-between-axios-and-fetch&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;https://medium.com/@kkak10/javascript-fetch-api-e26bfeaad9b6&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/03/13/axiosVSfetch.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/03/13/axiosVSfetch.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>리액트 Hook에 대한 정리</title>
        <description>&lt;h3 id=&quot;hook을-사용하면-뭐가-좋은가&quot;&gt;Hook을 사용하면 뭐가 좋은가?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;리액트에서 컴포넌트를 만드는 2가지 방법으로는 state가 필요한 클래스기반의 컴포넌트와
함수기반의 컴포넌트가 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Hook을 사용하면 state+ 함수기반의 컴포넌트를 사용할 수가 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;똑같은 작업을 componentDidMount()와 componentUpdate()에서 구현해야 할때 useEffect()로 중복로직 해결이 가능하다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hook의-역사&quot;&gt;Hook의 역사&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;recompose라는 라이브러리에서 시작되었다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/recompose&quot;&gt;recompose - npm&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/acdlite/recompose&quot;&gt;recompose github&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;리액트팀에 합류하면서 2018.10.25 업데이트 중단 이후 Hooks로 릴리즈되었다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;실제-사용-예시&quot;&gt;실제 사용 예시&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;출처 - &lt;a href=&quot;https://www.youtube.com/watch?v=sZDvByH2mNU&quot;&gt;React Hooks for daily use!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;[인풋(이름 입력), 데이터요청(랜덤 고양이 이미지) 예제]&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ReactDOM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;react-dom&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onChange&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useFetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 복수의 state 변수 선언 가능&lt;/span&gt;
	 &lt;span class=&quot;c1&quot;&gt;// url에서 가져온정보&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setPayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setLoading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callUrl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	  &lt;span class=&quot;c1&quot;&gt;//throw Error();&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setPayload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;😭&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	  &lt;span class=&quot;c1&quot;&gt;// 에러 유무에 따라서 실행&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;setLoading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//componentDidMount()와 componentUpdate()를  대체할 수 있지만 &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// 이 예제에서는 componentDidMount()만 사용 &lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callUrl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useInput&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useFetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;https://aws.random.cat/meow&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;h1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Hooks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;placeholder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Whats your name&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;br&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}
&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/span&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}
&lt;/span&gt;      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;loading&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/03/05/hooks.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/03/05/hooks.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>sync, async vs blocking, non-blocking</title>
        <description>&lt;h2 id=&quot;non-blocking-blocking&quot;&gt;non-blocking, blocking&lt;/h2&gt;

&lt;h3 id=&quot;검색결과&quot;&gt;검색결과&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;호출된 함수가 바로 리턴해서 호출한 함수에게 제어권을 넘겨주고, 호출한 함수가 다른 일을 할 수 있는 기회를 줄 수 있으면 NonBlocking이다.&lt;/p&gt;

    &lt;p&gt;그렇지 않고 호출된 함수가 자신의 작업을 모두 마칠 때까지 호출한 함수에게 제어권을 넘겨주지 않고 대기하게 만든다면 Blocking이다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처 : https://homoefficio.github.io/2017/02/19/Blocking-NonBlocking-Synchronous-Asynchronous/#btn-open-shareoptions &lt;strong&gt;[HomoEfficio]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Non-blocking이란, 어떤 쓰레드에서 오류가 발생하거나 멈추었을 때 다른 쓰레드에게 영향을 끼치지 않도록 만드는 방법들을 말한다&lt;/p&gt;

    &lt;p&gt;그렇지 않고 호출된 함수가 자신의 작업을 모두 마칠 때까지 호출한 함수에게 제어권을 넘겨주지 않고 대기하게 만든다면 Blocking이다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처 : https://tech.peoplefund.co.kr/2017/08/02/non-blocking-asynchronous-concurrency.html &lt;strong&gt;[Peoplefund Tech]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;블로킹은 자신의 수행결과가 끝날 때까지 제어권을 갖고 있는 것을 의미합니다.&lt;/p&gt;

    &lt;p&gt;논블로킹은 자신이 호출되었을 때 제어권을 바로 자신을 호출한 쪽으로 넘기며, 자신을 호출한 쪽에서 다른 일을 할 수 있도록 하는 것을 의미합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: https://victorydntmd.tistory.com/8 [victolee]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;애플리케이션 실행 시 운영체제 대기 큐에 들어가면서 요청에 대한 system call이 완료된 후에 응답을 보낼 경우 blocking&lt;/p&gt;

    &lt;p&gt;애플리케이션 실행 시 운영체제 대기 큐에 들어가지 않고, 실행 여부와 관계없이 바로 응답을 보낼 경우 non-blocking&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: https://www.slipp.net/questions/367 &lt;strong&gt;[SLiPP]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;sync-async-vs-blocking-non-blocking-차이점&quot;&gt;sync, async vs blocking, non-blocking 차이점&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/IOmodels.gif&quot; alt=&quot;non-blocking, blocking&quot; title=&quot;non-blocking, blocking&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;검색결과-1&quot;&gt;검색결과&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Blocking/NonBlocking은 호출되는 함수가 바로 리턴하느냐 마느냐가 관심사다.&lt;/p&gt;

    &lt;p&gt;Synchronous/Asynchronous는 호출되는 함수의 작업 완료 여부를 누가 신경쓰냐가 관심사다.&lt;/p&gt;

    &lt;p&gt;Blocking-Async의 대표적인 케이스가 Node.js와 MySQL의 조합이라고 한다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처 : https://homoefficio.github.io/2017/02/19/Blocking-NonBlocking-Synchronous-Asynchronous/#btn-open-shareoptions &lt;strong&gt;[HomoEfficio]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;시스템콜이 즉시 리턴될때 데이터와 함께 오면 Nonblocking, 함께 오지 않으면 Asynchronous&lt;/p&gt;

    &lt;p&gt;시스템콜의 리턴을 기다리는 동안 대기 큐에 머무는 것이 필수면  Synchronous, 필수가 아니면 Blocking&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;출처: https://www.slideshare.net/unitimes/sync-asyncblockingnonblockingio &lt;strong&gt;[Cheoloh Bae]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;system call이 반환될 때 실행된 결과와 함께 반환될 경우 non-blocking, 
system call이 반환될 때 실행된 결과와 함께 반환되지 않는 경우 asynchronous,
시스템의 반환을 기다리는 동안 대기 큐에 머무는 것이 필수가 아니면 synchronous, 
시스템의 반환을 기다리는 동안 대기 큐에 머무는 것이 필수이면 blocking&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;출처: https://www.slipp.net/questions/367 &lt;strong&gt;[SLiPP]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Tue, 26 Feb 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/02/26/sync_async_blocking_non-blocking.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/02/26/sync_async_blocking_non-blocking.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>내가 착각한 REST API와 Mongoose에 대한 생각</title>
        <description>&lt;h2 id=&quot;rest-api와-mongoose&quot;&gt;REST API와 Mongoose&lt;/h2&gt;

&lt;h3 id=&quot;무엇을-착각하였는지&quot;&gt;무엇을 착각하였는지&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사이드 프로젝트에 서버를 만드느라 REST API와 Mongoose를 사용하게 되었는데 나는 Mongoose같은 DB안에 REST가 있는거라 생각을 했었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;왜-착각하였을까&quot;&gt;왜 착각하였을까&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;내가 구글링과 책내용을 통하여 정보를 습득한 바로는 이 둘은 뗄수 없는 존재 마치 바늘과 실 1세트같이 느껴짐&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;우선-내가-아는-rest-api와-mongoose에-대해-적어보자&quot;&gt;우선 내가 아는 REST API와 Mongoose에 대해 적어보자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;REST는 웹의 장점을 최대한 활용할 수 있는 네트워크 기반의  아키텍쳐 , API로는 GET,PUT(또는 PATCH),POST,DELETE method가 있다.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Mongoose는 DBMS중 noSQL의 하나인 MongoDB 기반의 대표적 ODM이다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;rest-관련글을-다시-검색해보자&quot;&gt;REST 관련글을 다시 검색해보자.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;출처: https://bcho.tistory.com/321  &lt;strong&gt;[조대협의 블로그]&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;출처: [&lt;strong&gt;&lt;a href=&quot;https://medium.com/@marinithiago/guys-rest-apis-are-not-databases-60db4e1120e4&quot;&gt;Guys, REST APIs are not Databases
&lt;/a&gt;&lt;/strong&gt;]&lt;/li&gt;
  &lt;li&gt;출처: https://poiemaweb.com/js-rest-api  &lt;strong&gt;[Poiemaweb]&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;출처: https://velopert.com/332  &lt;strong&gt;[VELOPERT.LOG]&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;출처: [&lt;strong&gt;&lt;a href=&quot;https://medium.com/@etiennerouzeaud/how-create-an-api-restfull-in-express-node-js-without-database-b030c687e2ea&quot;&gt;How create an API RESTfull in Express (Node.js) without Database
&lt;/a&gt;&lt;/strong&gt;]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;이제-정리하자면&quot;&gt;이제 정리하자면&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;REST와 Mongoose의 관계는 밀접하다.&lt;/li&gt;
  &lt;li&gt;하지만 Mongoose같은 DB없이도 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;DB의 목적은 데이터를 저장하는 것 ,REST API는 구성요소의 상호작용&lt;/li&gt;
  &lt;li&gt;REST서버는 정보에 접근 및 변경을 가능케 하는데 여기서 정보는 text,xml,json등 형식으로 제공한다.&lt;/li&gt;
  &lt;li&gt;REST API는 자원(Resource), 행위(Verb), 표현(Representations)의 3가지 요소로 구성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;내가-해야-할일&quot;&gt;내가 해야 할일&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;사이드 프로젝트 sever.js를 unit test코드로 작성중인데 REST API와 Mongoose를 분리해서 코드 정리 시도&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 08 Feb 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/02/08/mistake.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/02/08/mistake.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>콜백함수와 비동기 그리고 async await</title>
        <description>&lt;h2 id=&quot;콜백함수와-비동기&quot;&gt;콜백함수와 비동기&lt;/h2&gt;

&lt;h3 id=&quot;콜백함수란-무엇일까요&quot;&gt;콜백함수란 무엇일까요&lt;/h3&gt;

&lt;h4 id=&quot;검색결과&quot;&gt;검색결과&lt;/h4&gt;

&lt;ol target=&quot;_blank&quot;&gt;
  &lt;li&gt;
    &lt;p&gt;함수 실행결과값을 리턴이 아닌 매개변수로 넘어온 함수를 호출해서 넘겨주는 방식을 콜백이라 하며 이때  매개변수로 넘어온 함수를 콜백함수라고 합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: 자바스크립트+jQuery 완전정복 스터디 1 - &lt;strong&gt;[웹동네 김춘경님]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;어떤 이벤트가 발생한 후 수행될 함수를 의미합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처:  &lt;a href=&quot;https://victorydntmd.tistory.com/48&quot; target=&quot;_blank&quot;&gt;victolee&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일종의 식당 자리 예약과 같습니다. 일반적으로 맛집을 가면 사람이 많아 자리가 없습니다. 그래서 대기자 명단에 이름을 쓴 다음에 자리가 날 때까지 주변 식당을 돌아다니죠. 만약 식당에서 자리가 생기면 전화로 자리가 났다고 연락이 옵니다. 그 전화를 받는 시점이 여기서의 콜백 함수가 호출되는 시점과 같습니다. 손님 입장에서는 자리가 날 때까지 식당에서 기다리지 않고 근처 가게에서 잠깐 쇼핑을 할 수도 있고 아니면 다른 식당 자리를 알아볼 수도 있습니다.
자리가 났을 때만 연락이 오기 때문에 미리 가서 기다릴 필요도 없고, 직접 식당 안에 들어가서 자리가 비어 있는지 확인할 필요도 없습니다. 자리가 준비된 시점, 즉 데이터가 준비된 시점에서만 저희가 원하는 동작(자리에 앉는다, 특정 값을 출력한다 등)을 수행할 수 있습니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처:  &lt;a href=&quot;https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation&quot; target=&quot;_blank&quot;&gt;Captain Pangyo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;콜백 함수의 이름에서부터 알 수 있듯이, 전화를 다시 하다 (?) 라는 뜻이다. (물론 그런 의도가 아니었을지라도)
무엇인가 일을 다른 객체에게 시키고, 그 일이 끝나는 것을 기다리는 것이 아니라 그 객체가 나를 다시 부를때까지 내 할일을 하고 있는 것이다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처:  &lt;a href=&quot;https://dalkomit.tistory.com/65&quot; target=&quot;_blank&quot;&gt;DalkomIT&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 함수의 인자로써 이용되는 함수, 어떤 이벤트에 의해 호출되어지는 함수&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: &lt;a href=&quot;https://satisfactoryplace.tistory.com/18&quot; target=&quot;_blank&quot;&gt;만족&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;콜백함수란 어떠한 정보(또는 이벤트)를 관리하는 대상이 자신의 정보가 변경되거나 또는 이벤트가 발생할때 
자신의 변경된 정보나 이벤트에 따른 어떠한 처리를 할 수 있도록 제공하는 함수라고 할 수 있습니다.
어떤 정보를 원하는 쪽이 정보를 제공하는 쪽에게 반복적으로 정보를 요구(또는 확인)하는 방법보다
정보를 제공하는 쪽이 정보를 원하는 쪽에게 통보하는 것&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: &lt;a href=&quot;https://smok95.tistory.com/193&quot; target=&quot;_blank&quot;&gt;Only YOUng&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Callback function은, 특정 함수에 매개변수로서 전달된 함수를 지칭합니다.
그리고 그 Callback function은 그 함수를 전달받은 함수 안에서 호출되게 됩니다&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
  &lt;li&gt;출처: &lt;a href=&quot;https://velopert.com/255&quot; target=&quot;_blank&quot;&gt;velopert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;공통점-이벤트-발생하는-시점에-원하는-동작을-호출하는-함수비동기&quot;&gt;공통점: 이벤트 발생하는 시점에 원하는 동작을 호출하는 함수(비동기)&lt;/h4&gt;

&lt;h4 id=&quot;멘토님-내가-제어권을-가지지-않아-언제-호출될지-모르는-함수&quot;&gt;멘토님: 내가 제어권을 가지지 않아 언제 호출될지 모르는 함수&lt;/h4&gt;

&lt;h4 id=&quot;ex-회사에-입사지원을-하고-서류전형이-합격되어-연락을-받았고-면접날짜를-잡았다&quot;&gt;ex: 회사에 입사지원을 하고 서류전형이 합격되어 연락을 받았고 면접날짜를 잡았다.&lt;/h4&gt;

&lt;h3 id=&quot;동기-비동기&quot;&gt;동기, 비동기&lt;/h3&gt;

&lt;h4 id=&quot;검색결과-1&quot;&gt;검색결과&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;동기: 일반적으로 함수가 호출된 후 끝날때까지 다음 구문을 실행하지 않고 대기하고 있는 경우,
비동기: 일반적으로 함수가 호출된 후 끝날때까지 기다리지 않고 바로 다음 구문을 실행하는 경우&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처: 자바스크립트+jQuery 완전정복 스터디 1 - &lt;strong&gt;[웹동네 김춘경님]&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;동기는 말 그대로 동시에 일어난다는 뜻입니다. 요청과 그 결과가 동시에 일어난다는 약속인데요. 바로 요청을 하면 시간이 얼마가 걸리던지 요청한 자리에서 결과가 주어져야 합니다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;요청과 결과가 한 자리에서 동시에 일어남&lt;/li&gt;
          &lt;li&gt;A노드와 B노드 사이의 작업 처리 단위(transaction)를 동시에 맞추겠다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;비동기는 동시에 일어나지 않는다를 의미합니다. 요청과 결과가 동시에 일어나지 않을거라는 약속입니다.&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;요청한 그 자리에서 결과가 주어지지 않음&lt;/li&gt;
          &lt;li&gt;노드 사이의 작업 처리 단위를 동시에 맞추지 않아도 된다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;동기와 비동기는 어떤 작업 혹은 그와 연관된 작업을 처리하고자 하는 시각의 차이입니다. 동기는 추구하는 같은 행위(목적)가 동시에 이루어지며, 비동기는 추구하는 행위(목적)가 다를 수도 있고, 동시에 이루어지지도 않습니다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;출처: &lt;a href=&quot;https://private.tistory.com/24&quot; target=&quot;_blank&quot;&gt;공부해서 남 주자&lt;/a&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;자바스크립트의 비동기 처리란 특정 코드의 연산이 끝날 때까지 코드의 실행을 멈추지 않고 다음 코드를 먼저 실행하는 자바스크립트의 특성을 의미합니다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;출처 : &lt;a href=&quot;https://joshua1988.github.io/web-development/javascript/javascript-asynchronous-operation&quot; target=&quot;_blank&quot;&gt;Captain Pangyo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;공통점-특정-로직이--끝날때까지-기다리지-않고-먼저-실행되는-경우&quot;&gt;공통점: 특정 로직이  끝날때까지 기다리지 않고 먼저 실행되는 경우&lt;/h4&gt;

&lt;h3 id=&quot;콜백헬&quot;&gt;콜백헬&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;어마무시한 중첩함수자체가 콜백헬을 만드는게 아니라 콜백함수는 비동기인데 그안에 동기적인 코드를 넣으려고 하니 콜백헬에 빠지게 되는것&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;promise&quot;&gt;Promise&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;콜백함수의 단점&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;가독성이 떨어진다.&lt;/li&gt;
      &lt;li&gt;코드를 수정하기도 만들기도 어렵다.&lt;/li&gt;
      &lt;li&gt;그리고 콜백헬…😈&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;비동기코드를 동기 코드로 짤 수 있게 만들어주는 패턴&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;asyncawait&quot;&gt;async/await&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;ES8문법으로 Promise의 단점을 보완&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;async/await이 Promise보다 좋은 이유&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;코드가 간결하고 깔끔해진다.&lt;/li&gt;
      &lt;li&gt;try / catch로 에러 핸들링이 가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;다른 언어에서는 이미 사용하고 있음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;ex: C#(5.0부터), 스칼라, 파이썬(3.5부터) 등등 &lt;code class=&quot;highlighter-rouge&quot;&gt;en.wikipedia.org/wiki/Async/await&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/01/31/callback_function.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/01/31/callback_function.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>깃 명령어2</title>
        <description>&lt;h2 id=&quot;깃-명령어&quot;&gt;깃 명령어&lt;/h2&gt;

&lt;h3 id=&quot;push된-커밋을-취소하고--다시-push하기-개인-프로젝트는-상관없겠지만-협업시는-주의가-필요합니다-협업-멤버들과-의논후-진행하세요-&quot;&gt;push된 커밋을 취소하고  다시 push하기 (개인 프로젝트는 상관없겠지만 협업시는 주의가 필요합니다. 협업 멤버들과 의논후 진행하세요. )&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;git reflog로 목록을 확인합니다.
  &lt;img src=&quot;https://yoonucho.github.io/post_img/code6.jpg&quot; alt=&quot;git reflog 명령어 입력시 목록 예시&quot; title=&quot;git reflog&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;git reset HEAD@{number} 되돌리려는 시점으로 리셋합니다.&lt;/li&gt;
  &lt;li&gt;다시 git add와 commit후&lt;/li&gt;
  &lt;li&gt;git push -f(–force)로 강제 push합니다.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/git/2019/01/27/git.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/git/2019/01/27/git.html</guid>
        
        
        <category>git</category>
        
      </item>
    
      <item>
        <title>이슈노트 7</title>
        <description>&lt;h2 id=&quot;이슈-내용&quot;&gt;이슈 내용&lt;/h2&gt;

&lt;p&gt;사이드프로젝트에 백엔드서버를 Express와 Mongoose를 이용해 만들 계획을 하고 구글링을 통해 유투브 채널 CodingTheSmartWay.com의 The MERN Stack Tutorial을 알게 되었었는데 드디어 마지막 컨텐츠가 업데이트가 되어서 &lt;a href=&quot;https://www.youtube.com/watch?v=GIITXvYD7pc&quot;&gt;The MERN Stack Tutorial - Building A React CRUD Application From Start To Finish - Part 4&lt;/a&gt;를 통해 튜토리얼을 진행중 개발자도구 콘솔창에 워닝코드가 발생함.&lt;/p&gt;

&lt;h3 id=&quot;원인&quot;&gt;원인&lt;/h3&gt;

&lt;p&gt;todos-list.component에 라이프사이클 메서드중 componentDidMount에서  axios를 통하여  데이터를 요청했는데 componentWillUnMount를 써서 수정을 하거나 취소를 해줘야 메모리 누수가 없다는 거 같다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/code5.jpg&quot; alt=&quot;waring_msg&quot; title=&quot;componentWillUnMount Warning&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;워닝 코드 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글링&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;방법&quot;&gt;방법&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;(https://github.com/material-components/material-components-web-react/issues/434)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기존에는 isMounted()를 지원하였으나 현재는 안티 패턴이라고 한다.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html&quot;&gt;리액트 공식사이트 블로그&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;나는 1번으로 해결하였다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodosList&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;_isMounted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 추가코드&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_isMounted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 추가코드&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://localhost:4000/todos/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_isMounted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_isMounted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 추가코드&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;이유&quot;&gt;이유&lt;/h3&gt;

&lt;p&gt;방법 2번대로 Promise로 구현해보고 싶었으나 내가 느끼기에는 코드가 너무 길어보여서
비효율적이라는 생각이 들었다.  또한 내생각대로 제대로 되는거 같지도 않아 (Promise를 잘 몰라서 그런걸지도) 좀 더 글을 검색해보다가 
&lt;a href=&quot;https://www.facebook.com/groups/react.ko/permalink/1676709252589240&quot;&gt;리액트 코리아&lt;/a&gt; 
이 글의 이재호님의 댓글을 보고 결정하게 되었다.&lt;/p&gt;

&lt;h3 id=&quot;최종-과정과-해결&quot;&gt;최종 과정과 해결&lt;/h3&gt;

&lt;p&gt;우선 멘토님이 내 포스팅을 보시고 코드리뷰 후 async/await로 비동기를 동기식코드처럼
작성하는 코드를 알려 주셨고 그때의 문제의 원인은 setState가 비동기안에 있어서 발생한 문제라 생각했었다.
그래서 이 코드면  _isMounted는 필요가 없겠구나 생각했다.&lt;/p&gt;

&lt;p&gt;다음날 나는  멘토님이 알려주신대로 코드를 바꿔보았다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
    &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTodos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getTodos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://localhost:4000/todos/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;componentDidUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTodos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;componentWillUnmount&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;사실 맨 처음 코드에서 생략한 부분이 있었는데 튜토리얼시 componentDidMount()와 componentDidUpdate()코드가 똑같았었다.그걸 이번엔 중복을 줄여보려고 getTodos라는 함수를 만들어서 각각 넣어주었다.
  그런데 결과는 처음 마주했던 워닝 코드가 또 뜨는 것이다. 😢&lt;/p&gt;

&lt;p&gt;또  _isMounted를 넣어주니 워닝 코드는 사라졌으나 찜찜한 마음으로 멘토님께 메일을 보냈고 멘토님께서 내가 놓친 부분을 피드백으로 알려주셨다.
  문제의 원인은 component DidUpdate()에 setState였다!&lt;/p&gt;

&lt;p&gt;워낙 리액트 초보(공부한지 1Mㅋ)에 한동안 리액트코드를 안봐서 그런지 라이프사이클도 다 까먹어서 결국 난 또 삽질을 하고 말았다.😐&lt;/p&gt;

&lt;p&gt;멘토님의 피드백을 토대로 코드를 수정하니 이제 _isMounted와 componentWillUnmount()를 제거할 수 있었다! 😁&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[최종코드]&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodosList&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTodos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;getTodos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;http://localhost:4000/todos/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;componentDidUpdate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prevProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;prevProps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;todoList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 중략&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;삽질-이유를-정리해보자면&quot;&gt;삽질 이유를 정리해보자면&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;워닝코드에서 update에 대한 메시지가 있었는데 내가 보고싶은 것만 보고 그부분에 대해서만 해결하려고 했다. (영알못이라 더 그런거 같음)&lt;/li&gt;
  &lt;li&gt;유투브채널 강의자를 너무 믿었다. (?)
    &lt;ul&gt;
      &lt;li&gt;componentDidMount()와 componentDidUpdate()코드가 같은게 계속 마음에 걸리긴 했었다. 하지만 코딩 관련아카데미도 운영하는데 코드가 잘못 될리 없다고 생각하기도 했다 “&lt;strong&gt;세바스찬&lt;/strong&gt;아재 이러깁니까” 😠&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;제일 결정적인건 내가 리알못이라는거 라이프사이클을 이해못한 내가 제일 잘못했다 ㅋ;&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/issue_note/2019/01/25/MERN_tutorial.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/issue_note/2019/01/25/MERN_tutorial.html</guid>
        
        
        <category>issue_note</category>
        
      </item>
    
      <item>
        <title>unit test적용해보기</title>
        <description>&lt;h2 id=&quot;첫-unit-test-도전기-폭망함&quot;&gt;첫 unit test 도전기 폭망함&lt;/h2&gt;

&lt;h3 id=&quot;계획했던-작업&quot;&gt;계획했던 작업&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;jest와 supertest를 통하여 server.test.js를 무사통과(?)하게 하고 싶었음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;기존코드 초반부터 에러를 뿜어대니 그럼 간단하게  get메소드로 ‘hello world!’라도 찍어보고 싶었음.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;시도-후-느낀-점&quot;&gt;시도 후 느낀 점&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;구글링을 하여 관련 포스팅과 유투브 영상도 보았으나 지금 내코드에 적용하려니 도무지 감이 안와서 막막함.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;템플릿 Given, When, Then에 맞추어 시나리오를 작성하고 싶었으나 머리속에서 정리가 안됨. 내가 하려는 작업에 회의(?)를 느낌.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;버그를 찾기 위해서 하는 작업이 버그를 만드는거 같은 느낌적인 느낌이 듦.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;튜토리얼시  테스트파일 개수가 많았지만 속도는 빨랐는데 지금 내코드가 훨씬 느려서 뭔가 잘못되었구나 생각하니 우울… 
-&amp;gt; 튜토리얼 파일은 리액트파일이었고 프론트엔드쪽이라 빠른게 당연한다는 야옹야옹야옹님의 말씀에 위안을 얻음.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;unit test도 이런데 TDD는 어림없겠구나 싶음.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2019/01/16/unit_test2.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2019/01/16/unit_test2.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>이슈노트 6</title>
        <description>&lt;h2 id=&quot;이슈-내용&quot;&gt;이슈 내용&lt;/h2&gt;

&lt;p&gt;server.js를 unit test를 해보려고 server.test.js를 작성중 에러&lt;/p&gt;

&lt;h3 id=&quot;원인&quot;&gt;원인&lt;/h3&gt;

&lt;p&gt;yarn test시 exit오류&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/code4.jpg&quot; alt=&quot;error_msg&quot; title=&quot;unit test시 오류&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;에러 코드 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글링&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;에러코드 메세지대로 jest –detectOpenHandles를 붙임&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 16 Jan 2019 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/issue_note/2019/01/16/unit_test1.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/issue_note/2019/01/16/unit_test1.html</guid>
        
        
        <category>issue_note</category>
        
      </item>
    
      <item>
        <title>이슈노트 5</title>
        <description>&lt;h2 id=&quot;이슈-내용&quot;&gt;이슈 내용&lt;/h2&gt;

&lt;p&gt;node packages를 설치하고 삭제하는 과정에서 에러메시지가 뜸.
module not found: can’t resolve ‘react’ in ‘node_modules\react-dom\cjs&lt;/p&gt;

&lt;h3 id=&quot;원인&quot;&gt;원인&lt;/h3&gt;

&lt;p&gt;사실 원인을 잘 모르겠음 달력 라이브러리 여러개 받았다가 지우고 삭제하다 생긴 과정이라 ㅠ&lt;/p&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;에러 코드 확인&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글링&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;구글링을 하니 (https://github.com/facebook/create-react-app/issues/2534)에&lt;/p&gt;

    &lt;p&gt;리덕스 창시자 Dan Abramov님의 솔루션이 있어서 그대로 적용함.&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;package-lock.json와 yarn.lock를 지운다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;node_modules에 react가 있는지 확인한다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;만약 react가 없으면 package.json에 추가해준다.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;npm install을 실행한다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/issue_note/2018/12/24/dr.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/issue_note/2018/12/24/dr.html</guid>
        
        
        <category>issue_note</category>
        
      </item>
    
      <item>
        <title>데일리리포트앱 프로젝트</title>
        <description>&lt;h2 id=&quot;reactjs로-데일리포트앱-만들기-시자크-windows7&quot;&gt;ReactJS로 데일리포트앱 만들기 시자크 (Windows7)&lt;/h2&gt;

&lt;h3 id=&quot;고민&quot;&gt;고민&lt;/h3&gt;

&lt;p&gt;우선 각각의 파일을 상태저장 컴포넌트(이하 Smart)로 만들었다.&lt;/p&gt;

&lt;p&gt;리액트js를 1도 몰랐던 나는 Smart가 무조건 좋을거라 생각했는데;;&lt;/p&gt;

&lt;p&gt;여러 포스팅 글과 책(리액트교과서)을보니 상태비저장 컴포넌트(이하 Dumb)를&lt;/p&gt;

&lt;p&gt;가능한 많이 사용하라고 한다.&lt;/p&gt;

&lt;p&gt;지금 내가 생각하기로는 Day.js와 Calendar.js는 Smart로 만들고 나머지는 Dumb로 하면 될 듯 싶다.&lt;/p&gt;
</description>
        <pubDate>Fri, 21 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2018/12/21/dr.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2018/12/21/dr.html</guid>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>이슈노트 4</title>
        <description>&lt;h2 id=&quot;jekyll-블로그-삽질기&quot;&gt;jekyll 블로그 삽질기&lt;/h2&gt;

&lt;h3 id=&quot;이슈-내용&quot;&gt;이슈 내용&lt;/h3&gt;

&lt;p&gt;블로그 페이지에서 에러뿜는게 너무 신경쓰여서 수정하다가 헬을 맞이함.&lt;/p&gt;

&lt;h3 id=&quot;원인&quot;&gt;원인&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/code3.png&quot; alt=&quot;style.scss&quot; title=&quot;@import에러&quot; /&gt;&lt;/p&gt;

&lt;p&gt;지킬테마에 구글폰트가 임포트되어 있는데 내 VSCODE에 Prettier플러그인이  (코드를 이쁘게 만들어 주는 용도) 문서를&lt;/p&gt;

&lt;p&gt;저장하면서 ,에 자동 여백을 줘서 에러가 남.&lt;/p&gt;

&lt;h3 id=&quot;과정&quot;&gt;과정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;이메일로 온 에러 코드 확인&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;https://yoonucho.github.io/post_img/git_email.jpeg&quot; alt=&quot;email info&quot; title=&quot;깃헙에서 온 에러 메일&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;구글링&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지킬 설치  (루비도 설치ㅠㅠ) + 블로그도 재생성후 기존꺼 덮어 씌움&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;gem install jekyll bundler&lt;/li&gt;
  &lt;li&gt;루트에 디렉토리가 비지 않아서 jekyll new . –force
    &lt;ul&gt;
      &lt;li&gt;만약 새로운 폴더에 블로그 생성시는 jekyll new [블로그명]&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;지킬 파일 포함된 파일 저장소에 다시 푸시&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;일시정지&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;우선 원인이 깃허브페이지 문제인지 지킬블로그 문제인지 알 수 없었음.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;몇시간이 흐르고 배는 고프고 ㅠㅠ ‘어려운 문제는 쉽게 해결될 수도 있다’ 라는 어디선가 본 내용이 떠오름.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;메모장에 나름 방법을 정리&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;지킬블로그가 로컬서버에서 돌아가는지 확인&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;_config.yml 확인&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;저장소에서 지킬 파일을 지우고 깃허브페이지로는 실행되는지 확인&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;2시간안에 해결해보자.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;해결&quot;&gt;해결&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;지킬 로컬서버 실행시 커맨드창에  에러 메세지를 보고 발견&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;에러메시지&lt;/p&gt;

        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;ERROR: YOUR SITE COULD NOT BE BUILT:&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;Invalid YAML front matter in F:/yu2/yoonucho.github.io/style.scss&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;scss파일에서 ,앞 여백 삭제&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;밥먹고 수정하고 20분만에 해결 :D&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;루비와 지킬을 설치할 필요는 없었으나 결국 로컬서버를 실행해서 에러를 확인했으니 완전 헛고생은 아니었구나와&lt;/p&gt;

    &lt;p&gt;해결이 되지 않을때는 잠시 쉬면서 생각해보자.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 20 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/issue_note/2018/12/20/jekyll.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/issue_note/2018/12/20/jekyll.html</guid>
        
        
        <category>issue_note</category>
        
      </item>
    
      <item>
        <title>리액트 기초 배우기 #11</title>
        <description>&lt;h2 id=&quot;reactjs로-웹-서비스-만들기-windows7&quot;&gt;ReactJS로 웹 서비스 만들기 (Windows7)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://academy.nomadcoders.co/courses/enrolled/216871&quot;&gt;노마드 코더 ReactJS로 웹 서비스 만들기&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;노마드-코더-reactjs로-웹-서비스-만들기-11&quot;&gt;노마드 코더 ReactJS로 웹 서비스 만들기 #11&lt;/h3&gt;

&lt;p&gt;..연산자에 대해 막연하게만 알고 있었는데 영화 무비앱을 만드는 과정을
진행하면서 영화 전체 리스트를 …this.state.movies로
처리할 수 있다니 진짜 진짜 Awesome하다잉!&lt;/p&gt;

&lt;p&gt;페이스북이나 원티드에서 스크롤내릴때 무한업데이트 되는 원리가 이거였구나!&lt;/p&gt;

&lt;p&gt;(카테고리를 어디로 해야 할지 몰라서 우선 리뷰로)&lt;/p&gt;
</description>
        <pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate>
        <link>https://yoonucho.github.io/review/2018/12/19/react.html</link>
        <guid isPermaLink="true">https://yoonucho.github.io/review/2018/12/19/react.html</guid>
        
        
        <category>review</category>
        
      </item>
    
  </channel>
</rss>
